// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This is the Public API for MochiNote",
    "title": "MochiNote",
    "version": "1.0.0"
  },
  "paths": {
    "/v1/comments": {
      "post": {
        "description": "add comment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "commentsV1"
        ],
        "summary": "add comment",
        "operationId": "postCommentsV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "comment object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/commentObjectRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/commentResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      }
    },
    "/v1/comments/{comment_id}": {
      "delete": {
        "description": "delete comment",
        "produces": [
          "application/json"
        ],
        "tags": [
          "commentsV1"
        ],
        "summary": "delete a comment",
        "operationId": "removeComnentV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "comment id",
            "name": "comment_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/commentResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      }
    },
    "/v1/friends": {
      "get": {
        "description": "get friends info",
        "produces": [
          "application/json"
        ],
        "tags": [
          "friendsV1"
        ],
        "operationId": "getFriendsV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/getFriendObject"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      },
      "post": {
        "description": "add friends",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "friendsV1"
        ],
        "operationId": "addFriendsV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "username and username2",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/postfriends"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/friendResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      }
    },
    "/v1/friends/{username}": {
      "delete": {
        "description": "remove friends",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "friendsV1"
        ],
        "operationId": "removeFriendsV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "username",
            "name": "username",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/friendResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      }
    },
    "/v1/groups": {
      "get": {
        "description": "get all groups",
        "produces": [
          "application/json"
        ],
        "tags": [
          "groupsV1"
        ],
        "operationId": "getGroupsV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/getAllGroupsObject"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      },
      "post": {
        "description": "create a group",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "groupsV1"
        ],
        "operationId": "createGroupV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "group object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/postGroupObj"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/groupResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      }
    },
    "/v1/groups/{group_id}": {
      "get": {
        "description": "get a group info",
        "produces": [
          "application/json"
        ],
        "tags": [
          "groupsV1"
        ],
        "operationId": "getGroupInfoV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "group id",
            "name": "group_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/groupObj"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      },
      "delete": {
        "description": "delete a group",
        "produces": [
          "application/json"
        ],
        "tags": [
          "groupsV1"
        ],
        "operationId": "deleteGroupV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "group id",
            "name": "group_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/groupResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      },
      "patch": {
        "description": "update a group info",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "groupsV1"
        ],
        "operationId": "updateGroupInfoV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "group id",
            "name": "group_id",
            "in": "path",
            "required": true
          },
          {
            "description": "group object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/patchGroupObj"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/groupObj"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      }
    },
    "/v1/groups/{group_id}/members": {
      "get": {
        "description": "get group users",
        "produces": [
          "application/json"
        ],
        "tags": [
          "groupsV1"
        ],
        "operationId": "getGroupUsersV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "group id",
            "name": "group_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/groupMembersObject"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      },
      "post": {
        "description": "add group users",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "groupsV1"
        ],
        "operationId": "addGroupUsersV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "group id",
            "name": "group_id",
            "in": "path",
            "required": true
          },
          {
            "description": "array of users",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/groupMembers"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/groupResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      },
      "delete": {
        "description": "remove group users",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "groupsV1"
        ],
        "operationId": "removeGroupUsersV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "group id",
            "name": "group_id",
            "in": "path",
            "required": true
          },
          {
            "description": "array of users",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/groupMembers"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/groupResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      }
    },
    "/v1/images": {
      "get": {
        "description": "get a user image",
        "produces": [
          "application/json"
        ],
        "tags": [
          "userImagesV1"
        ],
        "summary": "get a user image",
        "operationId": "getUserImagesV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/userImagesResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      },
      "post": {
        "description": "post a user image",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "userImagesV1"
        ],
        "summary": "post a user image",
        "operationId": "postUserImagesV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "file",
            "description": "user image",
            "name": "userImage",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/successResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      }
    },
    "/v1/images/multiple": {
      "post": {
        "description": "get multiple user images",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "userImagesV1"
        ],
        "summary": "get multiple user images",
        "operationId": "getMultipleUserImagesV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "array of users",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/groupMembers"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/multipleUserImagesResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      }
    },
    "/v1/login": {
      "post": {
        "description": "handle login request, username and password",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "UserMgmtV1"
        ],
        "summary": "Sign up or log in",
        "operationId": "loginV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header"
          },
          {
            "description": "user object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createUserObject"
            }
          },
          {
            "type": "boolean",
            "default": false,
            "description": "Do sign up operation if set to true",
            "name": "signup",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/loginResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      }
    },
    "/v1/notes": {
      "post": {
        "description": "add note",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "notesV1"
        ],
        "summary": "add note",
        "operationId": "uploadNoteV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "note object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/noteObjectRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/noteResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      }
    },
    "/v1/notes/file": {
      "post": {
        "description": "post a pdf file",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "notesV1"
        ],
        "summary": "post a pdf file",
        "operationId": "postFileV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "file",
            "description": "note file",
            "name": "noteFile",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/postFileResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      }
    },
    "/v1/notes/file/{path}": {
      "get": {
        "description": "get a pdf file",
        "produces": [
          "application/json"
        ],
        "tags": [
          "notesV1"
        ],
        "summary": "get a pdf file",
        "operationId": "getFileV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "file path",
            "name": "path",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/getFileResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      }
    },
    "/v1/notes/files": {
      "post": {
        "description": "get multiple pdf files",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "notesV1"
        ],
        "summary": "get multiple pdf files",
        "operationId": "getMultipleFilesV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "path array",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/getFilesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/getFilesResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      }
    },
    "/v1/notes/group/{group_id}": {
      "get": {
        "description": "get group notes",
        "produces": [
          "application/json"
        ],
        "tags": [
          "notesV1"
        ],
        "summary": "get group notes",
        "operationId": "getGroupNotesV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "group_id to filter by",
            "name": "group_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/notesGetResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      }
    },
    "/v1/notes/search/{tags}": {
      "get": {
        "description": "one tag can be provided to search",
        "produces": [
          "application/json"
        ],
        "tags": [
          "notesV1"
        ],
        "summary": "find notes by tags",
        "operationId": "findNotesByTags",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "tags to filter by",
            "name": "tags",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "default": 20,
            "description": "limit of files",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "offset of files",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": true,
            "description": "updated at",
            "name": "updated_at",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/notesGetResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      }
    },
    "/v1/notes/username": {
      "get": {
        "description": "one username can be provided to search",
        "produces": [
          "application/json"
        ],
        "tags": [
          "notesV1"
        ],
        "summary": "find notes by username",
        "operationId": "findNotesByUsername",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/notesGetResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      }
    },
    "/v1/notes/{id}": {
      "get": {
        "description": "user",
        "produces": [
          "application/json"
        ],
        "tags": [
          "notesV1"
        ],
        "summary": "get single note",
        "operationId": "getSingleNoteV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "id to filter by",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/noteObjectResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      },
      "put": {
        "description": "user update note by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "notesV1"
        ],
        "summary": "update note",
        "operationId": "updateNote",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "title to filter by",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "note object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/noteObjectUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/noteObjectResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      },
      "delete": {
        "description": "user delete note by id",
        "produces": [
          "application/json"
        ],
        "tags": [
          "notesV1"
        ],
        "summary": "delete note",
        "operationId": "deleteNoteV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "id to filter by",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/noteResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      }
    },
    "/v1/notes/{id}/members": {
      "get": {
        "description": "get members of notes",
        "produces": [
          "application/json"
        ],
        "tags": [
          "notesV1"
        ],
        "summary": "get members of notes",
        "operationId": "getNoteMembersV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "note_id to filter by",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/getNoteMembersResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      },
      "post": {
        "description": "add members of notes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "notesV1"
        ],
        "summary": "add members of notes",
        "operationId": "addNoteMembersV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "note members",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/noteMembersRequest"
            }
          },
          {
            "type": "string",
            "description": "note_id to filter by",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/noteResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      },
      "delete": {
        "description": "remove members of notes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "notesV1"
        ],
        "summary": "remove members of notes",
        "operationId": "removeNoteMembersV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "note members",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/noteMembersRequest"
            }
          },
          {
            "type": "string",
            "description": "note_id to filter by",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/noteResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      }
    },
    "/v1/notes/{note_id}/comments": {
      "get": {
        "description": "get all comments of a note",
        "produces": [
          "application/json"
        ],
        "tags": [
          "notesV1"
        ],
        "summary": "get all comments of a note",
        "operationId": "getNoteComments",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "note id",
            "name": "note_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/noteCommentsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      }
    },
    "/v1/password/{password}": {
      "patch": {
        "description": "update password",
        "produces": [
          "application/json"
        ],
        "tags": [
          "UserMgmtV1"
        ],
        "summary": "Update password",
        "operationId": "updatePasswordV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "password",
            "name": "password",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/userObj"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      }
    },
    "/v1/user": {
      "get": {
        "description": "get user info",
        "produces": [
          "application/json"
        ],
        "tags": [
          "UserMgmtV1"
        ],
        "summary": "Get user info",
        "operationId": "getUserV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/userObj"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      },
      "patch": {
        "description": "update user info",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "UserMgmtV1"
        ],
        "summary": "Update user info",
        "operationId": "updateUserInfoV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "new user info body",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/updateUserObj"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/userObj"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      }
    },
    "/v1/user/username/{username}": {
      "get": {
        "description": "search by username",
        "produces": [
          "application/json"
        ],
        "tags": [
          "UserMgmtV1"
        ],
        "summary": "search by username",
        "operationId": "searchUserV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "username",
            "name": "username",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/userObj"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "commentObject": {
      "type": "object",
      "properties": {
        "comment_id": {
          "description": "comment id",
          "type": "string"
        },
        "content": {
          "description": "content of the comment",
          "type": "string"
        },
        "note_id": {
          "description": "the note corresponding to comment_id",
          "type": "string"
        },
        "username": {
          "description": "user who submit the comment",
          "type": "string"
        }
      }
    },
    "commentObjectRequest": {
      "type": "object",
      "required": [
        "note_id",
        "content"
      ],
      "properties": {
        "content": {
          "description": "content of the comment",
          "type": "string"
        },
        "note_id": {
          "description": "the note corresponding to comment_id",
          "type": "string"
        }
      }
    },
    "commentResponse": {
      "type": "object",
      "properties": {
        "comment_id": {
          "description": "the note corresponding to comment_id",
          "type": "string"
        }
      }
    },
    "createUserObject": {
      "type": "object",
      "required": [
        "username",
        "password"
      ],
      "properties": {
        "description": {
          "description": "description of the user",
          "type": "string"
        },
        "email": {
          "description": "email of the user",
          "type": "string"
        },
        "first_name": {
          "description": "first name of the user",
          "type": "string"
        },
        "last_name": {
          "description": "last name of the user",
          "type": "string"
        },
        "middle_name": {
          "description": "middle name of the user",
          "type": "string"
        },
        "password": {
          "description": "password of the user",
          "type": "string"
        },
        "username": {
          "description": "username of the user",
          "type": "string"
        }
      }
    },
    "errResponse": {
      "type": "object",
      "properties": {
        "errMessage": {
          "description": "error message",
          "type": "string"
        },
        "status_code": {
          "description": "http error code",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "friendResponse": {
      "type": "object",
      "properties": {
        "username": {
          "description": "username",
          "type": "string"
        }
      }
    },
    "getAllGroupsObject": {
      "type": "object",
      "properties": {
        "allGroups": {
          "description": "array of groups by username",
          "type": "array",
          "items": {
            "$ref": "#/definitions/groupObj"
          }
        }
      }
    },
    "getFileRequest": {
      "type": "object",
      "properties": {
        "path": {
          "description": "path of file",
          "type": "string"
        }
      }
    },
    "getFileResponse": {
      "type": "object",
      "properties": {
        "note_id": {
          "description": "note id for pdf file",
          "type": "string"
        },
        "note_reference": {
          "description": "note reference for pdf file",
          "type": "string"
        },
        "pdf_data": {
          "description": "pdf content",
          "type": "object"
        }
      }
    },
    "getFilesRequest": {
      "type": "object",
      "properties": {
        "filePaths": {
          "description": "file paths array",
          "type": "array",
          "items": {
            "$ref": "#/definitions/getFileRequest"
          }
        }
      }
    },
    "getFilesResponse": {
      "type": "object",
      "properties": {
        "count": {
          "description": "count of files",
          "type": "integer",
          "format": "int32"
        },
        "filesData": {
          "description": "files data array",
          "type": "array",
          "items": {
            "$ref": "#/definitions/getFileResponse"
          }
        }
      }
    },
    "getFriendObject": {
      "type": "object",
      "properties": {
        "friends": {
          "description": "array of friends username",
          "type": "array",
          "items": {
            "$ref": "#/definitions/friendResponse"
          }
        }
      }
    },
    "getNoteMembersResponse": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/groupObj"
          }
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/userObj"
          }
        }
      }
    },
    "groupMembers": {
      "type": "object",
      "properties": {
        "users": {
          "description": "array of group users",
          "type": "array",
          "items": {
            "$ref": "#/definitions/groupUser"
          }
        }
      }
    },
    "groupMembersObject": {
      "type": "object",
      "properties": {
        "users": {
          "description": "array of group users",
          "type": "array",
          "items": {
            "$ref": "#/definitions/userObj"
          }
        }
      }
    },
    "groupObj": {
      "type": "object",
      "properties": {
        "description": {
          "description": "group's desciption",
          "type": "string"
        },
        "group_id": {
          "description": "group id",
          "type": "string"
        },
        "group_name": {
          "description": "group name",
          "type": "string"
        },
        "group_owner": {
          "description": "group owner",
          "type": "string"
        }
      }
    },
    "groupResponse": {
      "type": "object",
      "properties": {
        "group_id": {
          "description": "group_id",
          "type": "string"
        }
      }
    },
    "groupUser": {
      "type": "object",
      "properties": {
        "username": {
          "description": "username of the user",
          "type": "string"
        }
      }
    },
    "loginResponse": {
      "type": "object",
      "properties": {
        "token": {
          "description": "jwt",
          "type": "string"
        },
        "username": {
          "description": "username of the user",
          "type": "string"
        }
      }
    },
    "multipleUserImagesResponse": {
      "type": "object",
      "properties": {
        "count": {
          "description": "count of user images",
          "type": "integer",
          "format": "int32"
        },
        "images": {
          "description": "multiple user images",
          "type": "array",
          "items": {
            "$ref": "#/definitions/userImagesResponse"
          }
        }
      }
    },
    "noteCommentsResponse": {
      "type": "object",
      "properties": {
        "comments": {
          "description": "array of comments of a note",
          "type": "array",
          "items": {
            "$ref": "#/definitions/commentObject"
          }
        }
      }
    },
    "noteGroupRequest": {
      "type": "object",
      "properties": {
        "group_id": {
          "description": "group id of a group",
          "type": "string"
        }
      }
    },
    "noteMembersRequest": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/noteGroupRequest"
          }
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/noteUserRequest"
          }
        }
      }
    },
    "noteObjectRequest": {
      "description": "note obj",
      "required": [
        "tag",
        "type",
        "note_reference",
        "style"
      ],
      "properties": {
        "description": {
          "description": "description of the note",
          "type": "string"
        },
        "note_reference": {
          "description": "path of file",
          "type": "string"
        },
        "style": {
          "description": "style of the note",
          "type": "string"
        },
        "tag": {
          "description": "tags of the note",
          "type": "string"
        },
        "title": {
          "description": "title of the note",
          "type": "string"
        },
        "type": {
          "description": "type of the note file, public, shared, private",
          "type": "string",
          "default": "private",
          "enum": [
            "private",
            "shared",
            "public"
          ]
        }
      }
    },
    "noteObjectResponse": {
      "description": "note obj response",
      "properties": {
        "description": {
          "description": "description of the note",
          "type": "string"
        },
        "note_id": {
          "description": "note id",
          "type": "string"
        },
        "note_owner": {
          "description": "owner of the note",
          "type": "string"
        },
        "note_reference": {
          "description": "path of file",
          "type": "string"
        },
        "style": {
          "description": "style of the note",
          "type": "string"
        },
        "tag": {
          "description": "tags of the note",
          "type": "string"
        },
        "title": {
          "description": "title of the note",
          "type": "string"
        },
        "type": {
          "description": "type of the note file, public, shared, private",
          "type": "string"
        }
      }
    },
    "noteObjectUpdate": {
      "description": "note obj",
      "properties": {
        "description": {
          "description": "description of the note",
          "type": "string"
        },
        "style": {
          "description": "style of the note",
          "type": "string"
        },
        "tag": {
          "description": "tags of the note",
          "type": "string"
        },
        "title": {
          "description": "title of the note",
          "type": "string"
        },
        "type": {
          "description": "type of the note file, public, shared, private",
          "type": "string"
        }
      }
    },
    "noteResponse": {
      "type": "object",
      "properties": {
        "note_id": {
          "description": "note id",
          "type": "string"
        }
      }
    },
    "noteUserRequest": {
      "type": "object",
      "properties": {
        "username": {
          "description": "username of a user",
          "type": "string"
        }
      }
    },
    "notesGetResponse": {
      "description": "array of note",
      "type": "object",
      "properties": {
        "notes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/noteObjectResponse"
          }
        }
      }
    },
    "patchGroupObj": {
      "type": "object",
      "properties": {
        "description": {
          "description": "group's desciption",
          "type": "string"
        },
        "group_name": {
          "description": "group name",
          "type": "string"
        }
      }
    },
    "postFileResponse": {
      "type": "object",
      "properties": {
        "note_reference": {
          "description": "path of file",
          "type": "string"
        }
      }
    },
    "postGroupObj": {
      "type": "object",
      "required": [
        "group_name"
      ],
      "properties": {
        "description": {
          "description": "group's desciption",
          "type": "string"
        },
        "group_name": {
          "description": "group name",
          "type": "string"
        }
      }
    },
    "postfriends": {
      "type": "object",
      "properties": {
        "username2": {
          "description": "friend name",
          "type": "string"
        }
      }
    },
    "successResponse": {
      "type": "object",
      "properties": {
        "message": {
          "description": "success message",
          "type": "string"
        },
        "status_code": {
          "description": "status code",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "updateUserObj": {
      "type": "object",
      "properties": {
        "description": {
          "description": "description of the user",
          "type": "string"
        },
        "email": {
          "description": "email of the user",
          "type": "string"
        },
        "first_name": {
          "description": "first name of the user",
          "type": "string"
        },
        "last_name": {
          "description": "last name of the user",
          "type": "string"
        },
        "middle_name": {
          "description": "middle name of the user",
          "type": "string"
        }
      }
    },
    "userImagesResponse": {
      "type": "object",
      "properties": {
        "name": {
          "description": "pic name",
          "type": "string"
        },
        "type": {
          "description": "type of pic",
          "type": "string"
        },
        "user_image": {
          "description": "user image",
          "type": "object"
        }
      }
    },
    "userObj": {
      "type": "object",
      "properties": {
        "description": {
          "description": "description of the user",
          "type": "string"
        },
        "email": {
          "description": "email of the user",
          "type": "string"
        },
        "first_name": {
          "description": "first name of the user",
          "type": "string"
        },
        "last_name": {
          "description": "last name of the user",
          "type": "string"
        },
        "middle_name": {
          "description": "middle name of the user",
          "type": "string"
        },
        "username": {
          "description": "username of the user",
          "type": "string"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This is the Public API for MochiNote",
    "title": "MochiNote",
    "version": "1.0.0"
  },
  "paths": {
    "/v1/comments": {
      "post": {
        "description": "add comment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "commentsV1"
        ],
        "summary": "add comment",
        "operationId": "postCommentsV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "comment object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/commentObjectRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/commentResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      }
    },
    "/v1/comments/{comment_id}": {
      "delete": {
        "description": "delete comment",
        "produces": [
          "application/json"
        ],
        "tags": [
          "commentsV1"
        ],
        "summary": "delete a comment",
        "operationId": "removeComnentV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "comment id",
            "name": "comment_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/commentResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      }
    },
    "/v1/friends": {
      "get": {
        "description": "get friends info",
        "produces": [
          "application/json"
        ],
        "tags": [
          "friendsV1"
        ],
        "operationId": "getFriendsV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/getFriendObject"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      },
      "post": {
        "description": "add friends",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "friendsV1"
        ],
        "operationId": "addFriendsV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "username and username2",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/postfriends"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/friendResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      }
    },
    "/v1/friends/{username}": {
      "delete": {
        "description": "remove friends",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "friendsV1"
        ],
        "operationId": "removeFriendsV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "username",
            "name": "username",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/friendResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      }
    },
    "/v1/groups": {
      "get": {
        "description": "get all groups",
        "produces": [
          "application/json"
        ],
        "tags": [
          "groupsV1"
        ],
        "operationId": "getGroupsV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/getAllGroupsObject"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      },
      "post": {
        "description": "create a group",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "groupsV1"
        ],
        "operationId": "createGroupV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "group object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/postGroupObj"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/groupResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      }
    },
    "/v1/groups/{group_id}": {
      "get": {
        "description": "get a group info",
        "produces": [
          "application/json"
        ],
        "tags": [
          "groupsV1"
        ],
        "operationId": "getGroupInfoV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "group id",
            "name": "group_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/groupObj"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      },
      "delete": {
        "description": "delete a group",
        "produces": [
          "application/json"
        ],
        "tags": [
          "groupsV1"
        ],
        "operationId": "deleteGroupV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "group id",
            "name": "group_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/groupResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      },
      "patch": {
        "description": "update a group info",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "groupsV1"
        ],
        "operationId": "updateGroupInfoV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "group id",
            "name": "group_id",
            "in": "path",
            "required": true
          },
          {
            "description": "group object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/patchGroupObj"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/groupObj"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      }
    },
    "/v1/groups/{group_id}/members": {
      "get": {
        "description": "get group users",
        "produces": [
          "application/json"
        ],
        "tags": [
          "groupsV1"
        ],
        "operationId": "getGroupUsersV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "group id",
            "name": "group_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/groupMembersObject"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      },
      "post": {
        "description": "add group users",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "groupsV1"
        ],
        "operationId": "addGroupUsersV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "group id",
            "name": "group_id",
            "in": "path",
            "required": true
          },
          {
            "description": "array of users",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/groupMembers"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/groupResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      },
      "delete": {
        "description": "remove group users",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "groupsV1"
        ],
        "operationId": "removeGroupUsersV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "group id",
            "name": "group_id",
            "in": "path",
            "required": true
          },
          {
            "description": "array of users",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/groupMembers"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/groupResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      }
    },
    "/v1/images": {
      "get": {
        "description": "get a user image",
        "produces": [
          "application/json"
        ],
        "tags": [
          "userImagesV1"
        ],
        "summary": "get a user image",
        "operationId": "getUserImagesV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/userImagesResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      },
      "post": {
        "description": "post a user image",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "userImagesV1"
        ],
        "summary": "post a user image",
        "operationId": "postUserImagesV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "file",
            "description": "user image",
            "name": "userImage",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/successResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      }
    },
    "/v1/images/multiple": {
      "post": {
        "description": "get multiple user images",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "userImagesV1"
        ],
        "summary": "get multiple user images",
        "operationId": "getMultipleUserImagesV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "array of users",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/groupMembers"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/multipleUserImagesResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      }
    },
    "/v1/login": {
      "post": {
        "description": "handle login request, username and password",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "UserMgmtV1"
        ],
        "summary": "Sign up or log in",
        "operationId": "loginV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header"
          },
          {
            "description": "user object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createUserObject"
            }
          },
          {
            "type": "boolean",
            "default": false,
            "description": "Do sign up operation if set to true",
            "name": "signup",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/loginResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      }
    },
    "/v1/notes": {
      "post": {
        "description": "add note",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "notesV1"
        ],
        "summary": "add note",
        "operationId": "uploadNoteV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "note object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/noteObjectRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/noteResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      }
    },
    "/v1/notes/file": {
      "post": {
        "description": "post a pdf file",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "notesV1"
        ],
        "summary": "post a pdf file",
        "operationId": "postFileV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "file",
            "description": "note file",
            "name": "noteFile",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/postFileResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      }
    },
    "/v1/notes/file/{path}": {
      "get": {
        "description": "get a pdf file",
        "produces": [
          "application/json"
        ],
        "tags": [
          "notesV1"
        ],
        "summary": "get a pdf file",
        "operationId": "getFileV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "file path",
            "name": "path",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/getFileResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      }
    },
    "/v1/notes/files": {
      "post": {
        "description": "get multiple pdf files",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "notesV1"
        ],
        "summary": "get multiple pdf files",
        "operationId": "getMultipleFilesV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "path array",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/getFilesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/getFilesResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      }
    },
    "/v1/notes/group/{group_id}": {
      "get": {
        "description": "get group notes",
        "produces": [
          "application/json"
        ],
        "tags": [
          "notesV1"
        ],
        "summary": "get group notes",
        "operationId": "getGroupNotesV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "group_id to filter by",
            "name": "group_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/notesGetResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      }
    },
    "/v1/notes/search/{tags}": {
      "get": {
        "description": "one tag can be provided to search",
        "produces": [
          "application/json"
        ],
        "tags": [
          "notesV1"
        ],
        "summary": "find notes by tags",
        "operationId": "findNotesByTags",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "tags to filter by",
            "name": "tags",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "default": 20,
            "description": "limit of files",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "offset of files",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": true,
            "description": "updated at",
            "name": "updated_at",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/notesGetResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      }
    },
    "/v1/notes/username": {
      "get": {
        "description": "one username can be provided to search",
        "produces": [
          "application/json"
        ],
        "tags": [
          "notesV1"
        ],
        "summary": "find notes by username",
        "operationId": "findNotesByUsername",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/notesGetResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      }
    },
    "/v1/notes/{id}": {
      "get": {
        "description": "user",
        "produces": [
          "application/json"
        ],
        "tags": [
          "notesV1"
        ],
        "summary": "get single note",
        "operationId": "getSingleNoteV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "id to filter by",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/noteObjectResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      },
      "put": {
        "description": "user update note by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "notesV1"
        ],
        "summary": "update note",
        "operationId": "updateNote",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "title to filter by",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "note object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/noteObjectUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/noteObjectResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      },
      "delete": {
        "description": "user delete note by id",
        "produces": [
          "application/json"
        ],
        "tags": [
          "notesV1"
        ],
        "summary": "delete note",
        "operationId": "deleteNoteV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "id to filter by",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/noteResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      }
    },
    "/v1/notes/{id}/members": {
      "get": {
        "description": "get members of notes",
        "produces": [
          "application/json"
        ],
        "tags": [
          "notesV1"
        ],
        "summary": "get members of notes",
        "operationId": "getNoteMembersV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "note_id to filter by",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/getNoteMembersResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      },
      "post": {
        "description": "add members of notes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "notesV1"
        ],
        "summary": "add members of notes",
        "operationId": "addNoteMembersV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "note members",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/noteMembersRequest"
            }
          },
          {
            "type": "string",
            "description": "note_id to filter by",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/noteResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      },
      "delete": {
        "description": "remove members of notes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "notesV1"
        ],
        "summary": "remove members of notes",
        "operationId": "removeNoteMembersV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "note members",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/noteMembersRequest"
            }
          },
          {
            "type": "string",
            "description": "note_id to filter by",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/noteResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      }
    },
    "/v1/notes/{note_id}/comments": {
      "get": {
        "description": "get all comments of a note",
        "produces": [
          "application/json"
        ],
        "tags": [
          "notesV1"
        ],
        "summary": "get all comments of a note",
        "operationId": "getNoteComments",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "note id",
            "name": "note_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/noteCommentsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      }
    },
    "/v1/password/{password}": {
      "patch": {
        "description": "update password",
        "produces": [
          "application/json"
        ],
        "tags": [
          "UserMgmtV1"
        ],
        "summary": "Update password",
        "operationId": "updatePasswordV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "password",
            "name": "password",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/userObj"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      }
    },
    "/v1/user": {
      "get": {
        "description": "get user info",
        "produces": [
          "application/json"
        ],
        "tags": [
          "UserMgmtV1"
        ],
        "summary": "Get user info",
        "operationId": "getUserV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/userObj"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      },
      "patch": {
        "description": "update user info",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "UserMgmtV1"
        ],
        "summary": "Update user info",
        "operationId": "updateUserInfoV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "new user info body",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/updateUserObj"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/userObj"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      }
    },
    "/v1/user/username/{username}": {
      "get": {
        "description": "search by username",
        "produces": [
          "application/json"
        ],
        "tags": [
          "UserMgmtV1"
        ],
        "summary": "search by username",
        "operationId": "searchUserV1",
        "parameters": [
          {
            "type": "string",
            "description": "Bearer token based Authorization",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "username",
            "name": "username",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/userObj"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "commentObject": {
      "type": "object",
      "properties": {
        "comment_id": {
          "description": "comment id",
          "type": "string"
        },
        "content": {
          "description": "content of the comment",
          "type": "string"
        },
        "note_id": {
          "description": "the note corresponding to comment_id",
          "type": "string"
        },
        "username": {
          "description": "user who submit the comment",
          "type": "string"
        }
      }
    },
    "commentObjectRequest": {
      "type": "object",
      "required": [
        "note_id",
        "content"
      ],
      "properties": {
        "content": {
          "description": "content of the comment",
          "type": "string"
        },
        "note_id": {
          "description": "the note corresponding to comment_id",
          "type": "string"
        }
      }
    },
    "commentResponse": {
      "type": "object",
      "properties": {
        "comment_id": {
          "description": "the note corresponding to comment_id",
          "type": "string"
        }
      }
    },
    "createUserObject": {
      "type": "object",
      "required": [
        "username",
        "password"
      ],
      "properties": {
        "description": {
          "description": "description of the user",
          "type": "string"
        },
        "email": {
          "description": "email of the user",
          "type": "string"
        },
        "first_name": {
          "description": "first name of the user",
          "type": "string"
        },
        "last_name": {
          "description": "last name of the user",
          "type": "string"
        },
        "middle_name": {
          "description": "middle name of the user",
          "type": "string"
        },
        "password": {
          "description": "password of the user",
          "type": "string"
        },
        "username": {
          "description": "username of the user",
          "type": "string"
        }
      }
    },
    "errResponse": {
      "type": "object",
      "properties": {
        "errMessage": {
          "description": "error message",
          "type": "string"
        },
        "status_code": {
          "description": "http error code",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "friendResponse": {
      "type": "object",
      "properties": {
        "username": {
          "description": "username",
          "type": "string"
        }
      }
    },
    "getAllGroupsObject": {
      "type": "object",
      "properties": {
        "allGroups": {
          "description": "array of groups by username",
          "type": "array",
          "items": {
            "$ref": "#/definitions/groupObj"
          }
        }
      }
    },
    "getFileRequest": {
      "type": "object",
      "properties": {
        "path": {
          "description": "path of file",
          "type": "string"
        }
      }
    },
    "getFileResponse": {
      "type": "object",
      "properties": {
        "note_id": {
          "description": "note id for pdf file",
          "type": "string"
        },
        "note_reference": {
          "description": "note reference for pdf file",
          "type": "string"
        },
        "pdf_data": {
          "description": "pdf content",
          "type": "object"
        }
      }
    },
    "getFilesRequest": {
      "type": "object",
      "properties": {
        "filePaths": {
          "description": "file paths array",
          "type": "array",
          "items": {
            "$ref": "#/definitions/getFileRequest"
          }
        }
      }
    },
    "getFilesResponse": {
      "type": "object",
      "properties": {
        "count": {
          "description": "count of files",
          "type": "integer",
          "format": "int32"
        },
        "filesData": {
          "description": "files data array",
          "type": "array",
          "items": {
            "$ref": "#/definitions/getFileResponse"
          }
        }
      }
    },
    "getFriendObject": {
      "type": "object",
      "properties": {
        "friends": {
          "description": "array of friends username",
          "type": "array",
          "items": {
            "$ref": "#/definitions/friendResponse"
          }
        }
      }
    },
    "getNoteMembersResponse": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/groupObj"
          }
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/userObj"
          }
        }
      }
    },
    "groupMembers": {
      "type": "object",
      "properties": {
        "users": {
          "description": "array of group users",
          "type": "array",
          "items": {
            "$ref": "#/definitions/groupUser"
          }
        }
      }
    },
    "groupMembersObject": {
      "type": "object",
      "properties": {
        "users": {
          "description": "array of group users",
          "type": "array",
          "items": {
            "$ref": "#/definitions/userObj"
          }
        }
      }
    },
    "groupObj": {
      "type": "object",
      "properties": {
        "description": {
          "description": "group's desciption",
          "type": "string"
        },
        "group_id": {
          "description": "group id",
          "type": "string"
        },
        "group_name": {
          "description": "group name",
          "type": "string"
        },
        "group_owner": {
          "description": "group owner",
          "type": "string"
        }
      }
    },
    "groupResponse": {
      "type": "object",
      "properties": {
        "group_id": {
          "description": "group_id",
          "type": "string"
        }
      }
    },
    "groupUser": {
      "type": "object",
      "properties": {
        "username": {
          "description": "username of the user",
          "type": "string"
        }
      }
    },
    "loginResponse": {
      "type": "object",
      "properties": {
        "token": {
          "description": "jwt",
          "type": "string"
        },
        "username": {
          "description": "username of the user",
          "type": "string"
        }
      }
    },
    "multipleUserImagesResponse": {
      "type": "object",
      "properties": {
        "count": {
          "description": "count of user images",
          "type": "integer",
          "format": "int32"
        },
        "images": {
          "description": "multiple user images",
          "type": "array",
          "items": {
            "$ref": "#/definitions/userImagesResponse"
          }
        }
      }
    },
    "noteCommentsResponse": {
      "type": "object",
      "properties": {
        "comments": {
          "description": "array of comments of a note",
          "type": "array",
          "items": {
            "$ref": "#/definitions/commentObject"
          }
        }
      }
    },
    "noteGroupRequest": {
      "type": "object",
      "properties": {
        "group_id": {
          "description": "group id of a group",
          "type": "string"
        }
      }
    },
    "noteMembersRequest": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/noteGroupRequest"
          }
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/noteUserRequest"
          }
        }
      }
    },
    "noteObjectRequest": {
      "description": "note obj",
      "required": [
        "tag",
        "type",
        "note_reference",
        "style"
      ],
      "properties": {
        "description": {
          "description": "description of the note",
          "type": "string"
        },
        "note_reference": {
          "description": "path of file",
          "type": "string"
        },
        "style": {
          "description": "style of the note",
          "type": "string"
        },
        "tag": {
          "description": "tags of the note",
          "type": "string"
        },
        "title": {
          "description": "title of the note",
          "type": "string"
        },
        "type": {
          "description": "type of the note file, public, shared, private",
          "type": "string",
          "default": "private",
          "enum": [
            "private",
            "shared",
            "public"
          ]
        }
      }
    },
    "noteObjectResponse": {
      "description": "note obj response",
      "properties": {
        "description": {
          "description": "description of the note",
          "type": "string"
        },
        "note_id": {
          "description": "note id",
          "type": "string"
        },
        "note_owner": {
          "description": "owner of the note",
          "type": "string"
        },
        "note_reference": {
          "description": "path of file",
          "type": "string"
        },
        "style": {
          "description": "style of the note",
          "type": "string"
        },
        "tag": {
          "description": "tags of the note",
          "type": "string"
        },
        "title": {
          "description": "title of the note",
          "type": "string"
        },
        "type": {
          "description": "type of the note file, public, shared, private",
          "type": "string"
        }
      }
    },
    "noteObjectUpdate": {
      "description": "note obj",
      "properties": {
        "description": {
          "description": "description of the note",
          "type": "string"
        },
        "style": {
          "description": "style of the note",
          "type": "string"
        },
        "tag": {
          "description": "tags of the note",
          "type": "string"
        },
        "title": {
          "description": "title of the note",
          "type": "string"
        },
        "type": {
          "description": "type of the note file, public, shared, private",
          "type": "string"
        }
      }
    },
    "noteResponse": {
      "type": "object",
      "properties": {
        "note_id": {
          "description": "note id",
          "type": "string"
        }
      }
    },
    "noteUserRequest": {
      "type": "object",
      "properties": {
        "username": {
          "description": "username of a user",
          "type": "string"
        }
      }
    },
    "notesGetResponse": {
      "description": "array of note",
      "type": "object",
      "properties": {
        "notes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/noteObjectResponse"
          }
        }
      }
    },
    "patchGroupObj": {
      "type": "object",
      "properties": {
        "description": {
          "description": "group's desciption",
          "type": "string"
        },
        "group_name": {
          "description": "group name",
          "type": "string"
        }
      }
    },
    "postFileResponse": {
      "type": "object",
      "properties": {
        "note_reference": {
          "description": "path of file",
          "type": "string"
        }
      }
    },
    "postGroupObj": {
      "type": "object",
      "required": [
        "group_name"
      ],
      "properties": {
        "description": {
          "description": "group's desciption",
          "type": "string"
        },
        "group_name": {
          "description": "group name",
          "type": "string"
        }
      }
    },
    "postfriends": {
      "type": "object",
      "properties": {
        "username2": {
          "description": "friend name",
          "type": "string"
        }
      }
    },
    "successResponse": {
      "type": "object",
      "properties": {
        "message": {
          "description": "success message",
          "type": "string"
        },
        "status_code": {
          "description": "status code",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "updateUserObj": {
      "type": "object",
      "properties": {
        "description": {
          "description": "description of the user",
          "type": "string"
        },
        "email": {
          "description": "email of the user",
          "type": "string"
        },
        "first_name": {
          "description": "first name of the user",
          "type": "string"
        },
        "last_name": {
          "description": "last name of the user",
          "type": "string"
        },
        "middle_name": {
          "description": "middle name of the user",
          "type": "string"
        }
      }
    },
    "userImagesResponse": {
      "type": "object",
      "properties": {
        "name": {
          "description": "pic name",
          "type": "string"
        },
        "type": {
          "description": "type of pic",
          "type": "string"
        },
        "user_image": {
          "description": "user image",
          "type": "object"
        }
      }
    },
    "userObj": {
      "type": "object",
      "properties": {
        "description": {
          "description": "description of the user",
          "type": "string"
        },
        "email": {
          "description": "email of the user",
          "type": "string"
        },
        "first_name": {
          "description": "first name of the user",
          "type": "string"
        },
        "last_name": {
          "description": "last name of the user",
          "type": "string"
        },
        "middle_name": {
          "description": "middle name of the user",
          "type": "string"
        },
        "username": {
          "description": "username of the user",
          "type": "string"
        }
      }
    }
  }
}`))
}
