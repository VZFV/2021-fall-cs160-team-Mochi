// Code generated by go-swagger; DO NOT EDIT.

package user_mgmt_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"2021-fall-cs160-team-Mochi/backend/source/generated/models"
)

// UpdatePasswordV1OKCode is the HTTP code returned for type UpdatePasswordV1OK
const UpdatePasswordV1OKCode int = 200

/*UpdatePasswordV1OK Success

swagger:response updatePasswordV1OK
*/
type UpdatePasswordV1OK struct {

	/*
	  In: Body
	*/
	Payload *models.UserObj `json:"body,omitempty"`
}

// NewUpdatePasswordV1OK creates UpdatePasswordV1OK with default headers values
func NewUpdatePasswordV1OK() *UpdatePasswordV1OK {

	return &UpdatePasswordV1OK{}
}

// WithPayload adds the payload to the update password v1 o k response
func (o *UpdatePasswordV1OK) WithPayload(payload *models.UserObj) *UpdatePasswordV1OK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update password v1 o k response
func (o *UpdatePasswordV1OK) SetPayload(payload *models.UserObj) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdatePasswordV1OK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdatePasswordV1BadRequestCode is the HTTP code returned for type UpdatePasswordV1BadRequest
const UpdatePasswordV1BadRequestCode int = 400

/*UpdatePasswordV1BadRequest Bad Request

swagger:response updatePasswordV1BadRequest
*/
type UpdatePasswordV1BadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewUpdatePasswordV1BadRequest creates UpdatePasswordV1BadRequest with default headers values
func NewUpdatePasswordV1BadRequest() *UpdatePasswordV1BadRequest {

	return &UpdatePasswordV1BadRequest{}
}

// WithPayload adds the payload to the update password v1 bad request response
func (o *UpdatePasswordV1BadRequest) WithPayload(payload *models.ErrResponse) *UpdatePasswordV1BadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update password v1 bad request response
func (o *UpdatePasswordV1BadRequest) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdatePasswordV1BadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdatePasswordV1UnauthorizedCode is the HTTP code returned for type UpdatePasswordV1Unauthorized
const UpdatePasswordV1UnauthorizedCode int = 401

/*UpdatePasswordV1Unauthorized Unauthorized

swagger:response updatePasswordV1Unauthorized
*/
type UpdatePasswordV1Unauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewUpdatePasswordV1Unauthorized creates UpdatePasswordV1Unauthorized with default headers values
func NewUpdatePasswordV1Unauthorized() *UpdatePasswordV1Unauthorized {

	return &UpdatePasswordV1Unauthorized{}
}

// WithPayload adds the payload to the update password v1 unauthorized response
func (o *UpdatePasswordV1Unauthorized) WithPayload(payload *models.ErrResponse) *UpdatePasswordV1Unauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update password v1 unauthorized response
func (o *UpdatePasswordV1Unauthorized) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdatePasswordV1Unauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdatePasswordV1ForbiddenCode is the HTTP code returned for type UpdatePasswordV1Forbidden
const UpdatePasswordV1ForbiddenCode int = 403

/*UpdatePasswordV1Forbidden Forbidden

swagger:response updatePasswordV1Forbidden
*/
type UpdatePasswordV1Forbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewUpdatePasswordV1Forbidden creates UpdatePasswordV1Forbidden with default headers values
func NewUpdatePasswordV1Forbidden() *UpdatePasswordV1Forbidden {

	return &UpdatePasswordV1Forbidden{}
}

// WithPayload adds the payload to the update password v1 forbidden response
func (o *UpdatePasswordV1Forbidden) WithPayload(payload *models.ErrResponse) *UpdatePasswordV1Forbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update password v1 forbidden response
func (o *UpdatePasswordV1Forbidden) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdatePasswordV1Forbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdatePasswordV1NotFoundCode is the HTTP code returned for type UpdatePasswordV1NotFound
const UpdatePasswordV1NotFoundCode int = 404

/*UpdatePasswordV1NotFound Not Found

swagger:response updatePasswordV1NotFound
*/
type UpdatePasswordV1NotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewUpdatePasswordV1NotFound creates UpdatePasswordV1NotFound with default headers values
func NewUpdatePasswordV1NotFound() *UpdatePasswordV1NotFound {

	return &UpdatePasswordV1NotFound{}
}

// WithPayload adds the payload to the update password v1 not found response
func (o *UpdatePasswordV1NotFound) WithPayload(payload *models.ErrResponse) *UpdatePasswordV1NotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update password v1 not found response
func (o *UpdatePasswordV1NotFound) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdatePasswordV1NotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdatePasswordV1ConflictCode is the HTTP code returned for type UpdatePasswordV1Conflict
const UpdatePasswordV1ConflictCode int = 409

/*UpdatePasswordV1Conflict Conflict

swagger:response updatePasswordV1Conflict
*/
type UpdatePasswordV1Conflict struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewUpdatePasswordV1Conflict creates UpdatePasswordV1Conflict with default headers values
func NewUpdatePasswordV1Conflict() *UpdatePasswordV1Conflict {

	return &UpdatePasswordV1Conflict{}
}

// WithPayload adds the payload to the update password v1 conflict response
func (o *UpdatePasswordV1Conflict) WithPayload(payload *models.ErrResponse) *UpdatePasswordV1Conflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update password v1 conflict response
func (o *UpdatePasswordV1Conflict) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdatePasswordV1Conflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdatePasswordV1InternalServerErrorCode is the HTTP code returned for type UpdatePasswordV1InternalServerError
const UpdatePasswordV1InternalServerErrorCode int = 500

/*UpdatePasswordV1InternalServerError Internal Server Error

swagger:response updatePasswordV1InternalServerError
*/
type UpdatePasswordV1InternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewUpdatePasswordV1InternalServerError creates UpdatePasswordV1InternalServerError with default headers values
func NewUpdatePasswordV1InternalServerError() *UpdatePasswordV1InternalServerError {

	return &UpdatePasswordV1InternalServerError{}
}

// WithPayload adds the payload to the update password v1 internal server error response
func (o *UpdatePasswordV1InternalServerError) WithPayload(payload *models.ErrResponse) *UpdatePasswordV1InternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update password v1 internal server error response
func (o *UpdatePasswordV1InternalServerError) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdatePasswordV1InternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
