// Code generated by go-swagger; DO NOT EDIT.

package user_images_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"2021-fall-cs160-team-Mochi/backend/source/generated/models"
)

// PostUserImagesV1OKCode is the HTTP code returned for type PostUserImagesV1OK
const PostUserImagesV1OKCode int = 200

/*PostUserImagesV1OK Success

swagger:response postUserImagesV1OK
*/
type PostUserImagesV1OK struct {

	/*
	  In: Body
	*/
	Payload *models.SuccessResponse `json:"body,omitempty"`
}

// NewPostUserImagesV1OK creates PostUserImagesV1OK with default headers values
func NewPostUserImagesV1OK() *PostUserImagesV1OK {

	return &PostUserImagesV1OK{}
}

// WithPayload adds the payload to the post user images v1 o k response
func (o *PostUserImagesV1OK) WithPayload(payload *models.SuccessResponse) *PostUserImagesV1OK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post user images v1 o k response
func (o *PostUserImagesV1OK) SetPayload(payload *models.SuccessResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUserImagesV1OK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostUserImagesV1BadRequestCode is the HTTP code returned for type PostUserImagesV1BadRequest
const PostUserImagesV1BadRequestCode int = 400

/*PostUserImagesV1BadRequest Bad Request

swagger:response postUserImagesV1BadRequest
*/
type PostUserImagesV1BadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewPostUserImagesV1BadRequest creates PostUserImagesV1BadRequest with default headers values
func NewPostUserImagesV1BadRequest() *PostUserImagesV1BadRequest {

	return &PostUserImagesV1BadRequest{}
}

// WithPayload adds the payload to the post user images v1 bad request response
func (o *PostUserImagesV1BadRequest) WithPayload(payload *models.ErrResponse) *PostUserImagesV1BadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post user images v1 bad request response
func (o *PostUserImagesV1BadRequest) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUserImagesV1BadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostUserImagesV1UnauthorizedCode is the HTTP code returned for type PostUserImagesV1Unauthorized
const PostUserImagesV1UnauthorizedCode int = 401

/*PostUserImagesV1Unauthorized Unauthorized

swagger:response postUserImagesV1Unauthorized
*/
type PostUserImagesV1Unauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewPostUserImagesV1Unauthorized creates PostUserImagesV1Unauthorized with default headers values
func NewPostUserImagesV1Unauthorized() *PostUserImagesV1Unauthorized {

	return &PostUserImagesV1Unauthorized{}
}

// WithPayload adds the payload to the post user images v1 unauthorized response
func (o *PostUserImagesV1Unauthorized) WithPayload(payload *models.ErrResponse) *PostUserImagesV1Unauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post user images v1 unauthorized response
func (o *PostUserImagesV1Unauthorized) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUserImagesV1Unauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostUserImagesV1ForbiddenCode is the HTTP code returned for type PostUserImagesV1Forbidden
const PostUserImagesV1ForbiddenCode int = 403

/*PostUserImagesV1Forbidden Forbidden

swagger:response postUserImagesV1Forbidden
*/
type PostUserImagesV1Forbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewPostUserImagesV1Forbidden creates PostUserImagesV1Forbidden with default headers values
func NewPostUserImagesV1Forbidden() *PostUserImagesV1Forbidden {

	return &PostUserImagesV1Forbidden{}
}

// WithPayload adds the payload to the post user images v1 forbidden response
func (o *PostUserImagesV1Forbidden) WithPayload(payload *models.ErrResponse) *PostUserImagesV1Forbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post user images v1 forbidden response
func (o *PostUserImagesV1Forbidden) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUserImagesV1Forbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostUserImagesV1NotFoundCode is the HTTP code returned for type PostUserImagesV1NotFound
const PostUserImagesV1NotFoundCode int = 404

/*PostUserImagesV1NotFound Not Found

swagger:response postUserImagesV1NotFound
*/
type PostUserImagesV1NotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewPostUserImagesV1NotFound creates PostUserImagesV1NotFound with default headers values
func NewPostUserImagesV1NotFound() *PostUserImagesV1NotFound {

	return &PostUserImagesV1NotFound{}
}

// WithPayload adds the payload to the post user images v1 not found response
func (o *PostUserImagesV1NotFound) WithPayload(payload *models.ErrResponse) *PostUserImagesV1NotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post user images v1 not found response
func (o *PostUserImagesV1NotFound) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUserImagesV1NotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostUserImagesV1ConflictCode is the HTTP code returned for type PostUserImagesV1Conflict
const PostUserImagesV1ConflictCode int = 409

/*PostUserImagesV1Conflict Conflict

swagger:response postUserImagesV1Conflict
*/
type PostUserImagesV1Conflict struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewPostUserImagesV1Conflict creates PostUserImagesV1Conflict with default headers values
func NewPostUserImagesV1Conflict() *PostUserImagesV1Conflict {

	return &PostUserImagesV1Conflict{}
}

// WithPayload adds the payload to the post user images v1 conflict response
func (o *PostUserImagesV1Conflict) WithPayload(payload *models.ErrResponse) *PostUserImagesV1Conflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post user images v1 conflict response
func (o *PostUserImagesV1Conflict) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUserImagesV1Conflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostUserImagesV1InternalServerErrorCode is the HTTP code returned for type PostUserImagesV1InternalServerError
const PostUserImagesV1InternalServerErrorCode int = 500

/*PostUserImagesV1InternalServerError Internal Server Error

swagger:response postUserImagesV1InternalServerError
*/
type PostUserImagesV1InternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewPostUserImagesV1InternalServerError creates PostUserImagesV1InternalServerError with default headers values
func NewPostUserImagesV1InternalServerError() *PostUserImagesV1InternalServerError {

	return &PostUserImagesV1InternalServerError{}
}

// WithPayload adds the payload to the post user images v1 internal server error response
func (o *PostUserImagesV1InternalServerError) WithPayload(payload *models.ErrResponse) *PostUserImagesV1InternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post user images v1 internal server error response
func (o *PostUserImagesV1InternalServerError) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUserImagesV1InternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
