// Code generated by go-swagger; DO NOT EDIT.

package user_images_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"2021-fall-cs160-team-Mochi/backend/source/generated/models"
)

// GetMultipleUserImagesV1OKCode is the HTTP code returned for type GetMultipleUserImagesV1OK
const GetMultipleUserImagesV1OKCode int = 200

/*GetMultipleUserImagesV1OK Success

swagger:response getMultipleUserImagesV1OK
*/
type GetMultipleUserImagesV1OK struct {

	/*
	  In: Body
	*/
	Payload *models.MultipleUserImagesResponse `json:"body,omitempty"`
}

// NewGetMultipleUserImagesV1OK creates GetMultipleUserImagesV1OK with default headers values
func NewGetMultipleUserImagesV1OK() *GetMultipleUserImagesV1OK {

	return &GetMultipleUserImagesV1OK{}
}

// WithPayload adds the payload to the get multiple user images v1 o k response
func (o *GetMultipleUserImagesV1OK) WithPayload(payload *models.MultipleUserImagesResponse) *GetMultipleUserImagesV1OK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get multiple user images v1 o k response
func (o *GetMultipleUserImagesV1OK) SetPayload(payload *models.MultipleUserImagesResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMultipleUserImagesV1OK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetMultipleUserImagesV1BadRequestCode is the HTTP code returned for type GetMultipleUserImagesV1BadRequest
const GetMultipleUserImagesV1BadRequestCode int = 400

/*GetMultipleUserImagesV1BadRequest Bad Request

swagger:response getMultipleUserImagesV1BadRequest
*/
type GetMultipleUserImagesV1BadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewGetMultipleUserImagesV1BadRequest creates GetMultipleUserImagesV1BadRequest with default headers values
func NewGetMultipleUserImagesV1BadRequest() *GetMultipleUserImagesV1BadRequest {

	return &GetMultipleUserImagesV1BadRequest{}
}

// WithPayload adds the payload to the get multiple user images v1 bad request response
func (o *GetMultipleUserImagesV1BadRequest) WithPayload(payload *models.ErrResponse) *GetMultipleUserImagesV1BadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get multiple user images v1 bad request response
func (o *GetMultipleUserImagesV1BadRequest) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMultipleUserImagesV1BadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetMultipleUserImagesV1UnauthorizedCode is the HTTP code returned for type GetMultipleUserImagesV1Unauthorized
const GetMultipleUserImagesV1UnauthorizedCode int = 401

/*GetMultipleUserImagesV1Unauthorized Unauthorized

swagger:response getMultipleUserImagesV1Unauthorized
*/
type GetMultipleUserImagesV1Unauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewGetMultipleUserImagesV1Unauthorized creates GetMultipleUserImagesV1Unauthorized with default headers values
func NewGetMultipleUserImagesV1Unauthorized() *GetMultipleUserImagesV1Unauthorized {

	return &GetMultipleUserImagesV1Unauthorized{}
}

// WithPayload adds the payload to the get multiple user images v1 unauthorized response
func (o *GetMultipleUserImagesV1Unauthorized) WithPayload(payload *models.ErrResponse) *GetMultipleUserImagesV1Unauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get multiple user images v1 unauthorized response
func (o *GetMultipleUserImagesV1Unauthorized) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMultipleUserImagesV1Unauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetMultipleUserImagesV1ForbiddenCode is the HTTP code returned for type GetMultipleUserImagesV1Forbidden
const GetMultipleUserImagesV1ForbiddenCode int = 403

/*GetMultipleUserImagesV1Forbidden Forbidden

swagger:response getMultipleUserImagesV1Forbidden
*/
type GetMultipleUserImagesV1Forbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewGetMultipleUserImagesV1Forbidden creates GetMultipleUserImagesV1Forbidden with default headers values
func NewGetMultipleUserImagesV1Forbidden() *GetMultipleUserImagesV1Forbidden {

	return &GetMultipleUserImagesV1Forbidden{}
}

// WithPayload adds the payload to the get multiple user images v1 forbidden response
func (o *GetMultipleUserImagesV1Forbidden) WithPayload(payload *models.ErrResponse) *GetMultipleUserImagesV1Forbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get multiple user images v1 forbidden response
func (o *GetMultipleUserImagesV1Forbidden) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMultipleUserImagesV1Forbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetMultipleUserImagesV1NotFoundCode is the HTTP code returned for type GetMultipleUserImagesV1NotFound
const GetMultipleUserImagesV1NotFoundCode int = 404

/*GetMultipleUserImagesV1NotFound Not Found

swagger:response getMultipleUserImagesV1NotFound
*/
type GetMultipleUserImagesV1NotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewGetMultipleUserImagesV1NotFound creates GetMultipleUserImagesV1NotFound with default headers values
func NewGetMultipleUserImagesV1NotFound() *GetMultipleUserImagesV1NotFound {

	return &GetMultipleUserImagesV1NotFound{}
}

// WithPayload adds the payload to the get multiple user images v1 not found response
func (o *GetMultipleUserImagesV1NotFound) WithPayload(payload *models.ErrResponse) *GetMultipleUserImagesV1NotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get multiple user images v1 not found response
func (o *GetMultipleUserImagesV1NotFound) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMultipleUserImagesV1NotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetMultipleUserImagesV1ConflictCode is the HTTP code returned for type GetMultipleUserImagesV1Conflict
const GetMultipleUserImagesV1ConflictCode int = 409

/*GetMultipleUserImagesV1Conflict Conflict

swagger:response getMultipleUserImagesV1Conflict
*/
type GetMultipleUserImagesV1Conflict struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewGetMultipleUserImagesV1Conflict creates GetMultipleUserImagesV1Conflict with default headers values
func NewGetMultipleUserImagesV1Conflict() *GetMultipleUserImagesV1Conflict {

	return &GetMultipleUserImagesV1Conflict{}
}

// WithPayload adds the payload to the get multiple user images v1 conflict response
func (o *GetMultipleUserImagesV1Conflict) WithPayload(payload *models.ErrResponse) *GetMultipleUserImagesV1Conflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get multiple user images v1 conflict response
func (o *GetMultipleUserImagesV1Conflict) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMultipleUserImagesV1Conflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetMultipleUserImagesV1InternalServerErrorCode is the HTTP code returned for type GetMultipleUserImagesV1InternalServerError
const GetMultipleUserImagesV1InternalServerErrorCode int = 500

/*GetMultipleUserImagesV1InternalServerError Internal Server Error

swagger:response getMultipleUserImagesV1InternalServerError
*/
type GetMultipleUserImagesV1InternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewGetMultipleUserImagesV1InternalServerError creates GetMultipleUserImagesV1InternalServerError with default headers values
func NewGetMultipleUserImagesV1InternalServerError() *GetMultipleUserImagesV1InternalServerError {

	return &GetMultipleUserImagesV1InternalServerError{}
}

// WithPayload adds the payload to the get multiple user images v1 internal server error response
func (o *GetMultipleUserImagesV1InternalServerError) WithPayload(payload *models.ErrResponse) *GetMultipleUserImagesV1InternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get multiple user images v1 internal server error response
func (o *GetMultipleUserImagesV1InternalServerError) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMultipleUserImagesV1InternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
