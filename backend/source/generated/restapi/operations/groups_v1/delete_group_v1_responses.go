// Code generated by go-swagger; DO NOT EDIT.

package groups_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"2021-fall-cs160-team-Mochi/backend/source/generated/models"
)

// DeleteGroupV1OKCode is the HTTP code returned for type DeleteGroupV1OK
const DeleteGroupV1OKCode int = 200

/*DeleteGroupV1OK Success

swagger:response deleteGroupV1OK
*/
type DeleteGroupV1OK struct {

	/*
	  In: Body
	*/
	Payload *models.GroupResponse `json:"body,omitempty"`
}

// NewDeleteGroupV1OK creates DeleteGroupV1OK with default headers values
func NewDeleteGroupV1OK() *DeleteGroupV1OK {

	return &DeleteGroupV1OK{}
}

// WithPayload adds the payload to the delete group v1 o k response
func (o *DeleteGroupV1OK) WithPayload(payload *models.GroupResponse) *DeleteGroupV1OK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete group v1 o k response
func (o *DeleteGroupV1OK) SetPayload(payload *models.GroupResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteGroupV1OK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteGroupV1BadRequestCode is the HTTP code returned for type DeleteGroupV1BadRequest
const DeleteGroupV1BadRequestCode int = 400

/*DeleteGroupV1BadRequest Bad Request

swagger:response deleteGroupV1BadRequest
*/
type DeleteGroupV1BadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewDeleteGroupV1BadRequest creates DeleteGroupV1BadRequest with default headers values
func NewDeleteGroupV1BadRequest() *DeleteGroupV1BadRequest {

	return &DeleteGroupV1BadRequest{}
}

// WithPayload adds the payload to the delete group v1 bad request response
func (o *DeleteGroupV1BadRequest) WithPayload(payload *models.ErrResponse) *DeleteGroupV1BadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete group v1 bad request response
func (o *DeleteGroupV1BadRequest) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteGroupV1BadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteGroupV1UnauthorizedCode is the HTTP code returned for type DeleteGroupV1Unauthorized
const DeleteGroupV1UnauthorizedCode int = 401

/*DeleteGroupV1Unauthorized Unauthorized

swagger:response deleteGroupV1Unauthorized
*/
type DeleteGroupV1Unauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewDeleteGroupV1Unauthorized creates DeleteGroupV1Unauthorized with default headers values
func NewDeleteGroupV1Unauthorized() *DeleteGroupV1Unauthorized {

	return &DeleteGroupV1Unauthorized{}
}

// WithPayload adds the payload to the delete group v1 unauthorized response
func (o *DeleteGroupV1Unauthorized) WithPayload(payload *models.ErrResponse) *DeleteGroupV1Unauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete group v1 unauthorized response
func (o *DeleteGroupV1Unauthorized) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteGroupV1Unauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteGroupV1ForbiddenCode is the HTTP code returned for type DeleteGroupV1Forbidden
const DeleteGroupV1ForbiddenCode int = 403

/*DeleteGroupV1Forbidden Forbidden

swagger:response deleteGroupV1Forbidden
*/
type DeleteGroupV1Forbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewDeleteGroupV1Forbidden creates DeleteGroupV1Forbidden with default headers values
func NewDeleteGroupV1Forbidden() *DeleteGroupV1Forbidden {

	return &DeleteGroupV1Forbidden{}
}

// WithPayload adds the payload to the delete group v1 forbidden response
func (o *DeleteGroupV1Forbidden) WithPayload(payload *models.ErrResponse) *DeleteGroupV1Forbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete group v1 forbidden response
func (o *DeleteGroupV1Forbidden) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteGroupV1Forbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteGroupV1NotFoundCode is the HTTP code returned for type DeleteGroupV1NotFound
const DeleteGroupV1NotFoundCode int = 404

/*DeleteGroupV1NotFound Not Found

swagger:response deleteGroupV1NotFound
*/
type DeleteGroupV1NotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewDeleteGroupV1NotFound creates DeleteGroupV1NotFound with default headers values
func NewDeleteGroupV1NotFound() *DeleteGroupV1NotFound {

	return &DeleteGroupV1NotFound{}
}

// WithPayload adds the payload to the delete group v1 not found response
func (o *DeleteGroupV1NotFound) WithPayload(payload *models.ErrResponse) *DeleteGroupV1NotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete group v1 not found response
func (o *DeleteGroupV1NotFound) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteGroupV1NotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteGroupV1ConflictCode is the HTTP code returned for type DeleteGroupV1Conflict
const DeleteGroupV1ConflictCode int = 409

/*DeleteGroupV1Conflict Conflict

swagger:response deleteGroupV1Conflict
*/
type DeleteGroupV1Conflict struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewDeleteGroupV1Conflict creates DeleteGroupV1Conflict with default headers values
func NewDeleteGroupV1Conflict() *DeleteGroupV1Conflict {

	return &DeleteGroupV1Conflict{}
}

// WithPayload adds the payload to the delete group v1 conflict response
func (o *DeleteGroupV1Conflict) WithPayload(payload *models.ErrResponse) *DeleteGroupV1Conflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete group v1 conflict response
func (o *DeleteGroupV1Conflict) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteGroupV1Conflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteGroupV1InternalServerErrorCode is the HTTP code returned for type DeleteGroupV1InternalServerError
const DeleteGroupV1InternalServerErrorCode int = 500

/*DeleteGroupV1InternalServerError Internal Server Error

swagger:response deleteGroupV1InternalServerError
*/
type DeleteGroupV1InternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewDeleteGroupV1InternalServerError creates DeleteGroupV1InternalServerError with default headers values
func NewDeleteGroupV1InternalServerError() *DeleteGroupV1InternalServerError {

	return &DeleteGroupV1InternalServerError{}
}

// WithPayload adds the payload to the delete group v1 internal server error response
func (o *DeleteGroupV1InternalServerError) WithPayload(payload *models.ErrResponse) *DeleteGroupV1InternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete group v1 internal server error response
func (o *DeleteGroupV1InternalServerError) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteGroupV1InternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
