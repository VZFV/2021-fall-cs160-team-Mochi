// Code generated by go-swagger; DO NOT EDIT.

package groups_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"2021-fall-cs160-team-Mochi/backend/source/generated/models"
)

// GetGroupInfoV1OKCode is the HTTP code returned for type GetGroupInfoV1OK
const GetGroupInfoV1OKCode int = 200

/*GetGroupInfoV1OK Success

swagger:response getGroupInfoV1OK
*/
type GetGroupInfoV1OK struct {

	/*
	  In: Body
	*/
	Payload *models.GroupObj `json:"body,omitempty"`
}

// NewGetGroupInfoV1OK creates GetGroupInfoV1OK with default headers values
func NewGetGroupInfoV1OK() *GetGroupInfoV1OK {

	return &GetGroupInfoV1OK{}
}

// WithPayload adds the payload to the get group info v1 o k response
func (o *GetGroupInfoV1OK) WithPayload(payload *models.GroupObj) *GetGroupInfoV1OK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get group info v1 o k response
func (o *GetGroupInfoV1OK) SetPayload(payload *models.GroupObj) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetGroupInfoV1OK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetGroupInfoV1BadRequestCode is the HTTP code returned for type GetGroupInfoV1BadRequest
const GetGroupInfoV1BadRequestCode int = 400

/*GetGroupInfoV1BadRequest Bad Request

swagger:response getGroupInfoV1BadRequest
*/
type GetGroupInfoV1BadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewGetGroupInfoV1BadRequest creates GetGroupInfoV1BadRequest with default headers values
func NewGetGroupInfoV1BadRequest() *GetGroupInfoV1BadRequest {

	return &GetGroupInfoV1BadRequest{}
}

// WithPayload adds the payload to the get group info v1 bad request response
func (o *GetGroupInfoV1BadRequest) WithPayload(payload *models.ErrResponse) *GetGroupInfoV1BadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get group info v1 bad request response
func (o *GetGroupInfoV1BadRequest) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetGroupInfoV1BadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetGroupInfoV1UnauthorizedCode is the HTTP code returned for type GetGroupInfoV1Unauthorized
const GetGroupInfoV1UnauthorizedCode int = 401

/*GetGroupInfoV1Unauthorized Unauthorized

swagger:response getGroupInfoV1Unauthorized
*/
type GetGroupInfoV1Unauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewGetGroupInfoV1Unauthorized creates GetGroupInfoV1Unauthorized with default headers values
func NewGetGroupInfoV1Unauthorized() *GetGroupInfoV1Unauthorized {

	return &GetGroupInfoV1Unauthorized{}
}

// WithPayload adds the payload to the get group info v1 unauthorized response
func (o *GetGroupInfoV1Unauthorized) WithPayload(payload *models.ErrResponse) *GetGroupInfoV1Unauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get group info v1 unauthorized response
func (o *GetGroupInfoV1Unauthorized) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetGroupInfoV1Unauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetGroupInfoV1ForbiddenCode is the HTTP code returned for type GetGroupInfoV1Forbidden
const GetGroupInfoV1ForbiddenCode int = 403

/*GetGroupInfoV1Forbidden Forbidden

swagger:response getGroupInfoV1Forbidden
*/
type GetGroupInfoV1Forbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewGetGroupInfoV1Forbidden creates GetGroupInfoV1Forbidden with default headers values
func NewGetGroupInfoV1Forbidden() *GetGroupInfoV1Forbidden {

	return &GetGroupInfoV1Forbidden{}
}

// WithPayload adds the payload to the get group info v1 forbidden response
func (o *GetGroupInfoV1Forbidden) WithPayload(payload *models.ErrResponse) *GetGroupInfoV1Forbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get group info v1 forbidden response
func (o *GetGroupInfoV1Forbidden) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetGroupInfoV1Forbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetGroupInfoV1NotFoundCode is the HTTP code returned for type GetGroupInfoV1NotFound
const GetGroupInfoV1NotFoundCode int = 404

/*GetGroupInfoV1NotFound Not Found

swagger:response getGroupInfoV1NotFound
*/
type GetGroupInfoV1NotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewGetGroupInfoV1NotFound creates GetGroupInfoV1NotFound with default headers values
func NewGetGroupInfoV1NotFound() *GetGroupInfoV1NotFound {

	return &GetGroupInfoV1NotFound{}
}

// WithPayload adds the payload to the get group info v1 not found response
func (o *GetGroupInfoV1NotFound) WithPayload(payload *models.ErrResponse) *GetGroupInfoV1NotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get group info v1 not found response
func (o *GetGroupInfoV1NotFound) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetGroupInfoV1NotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetGroupInfoV1ConflictCode is the HTTP code returned for type GetGroupInfoV1Conflict
const GetGroupInfoV1ConflictCode int = 409

/*GetGroupInfoV1Conflict Conflict

swagger:response getGroupInfoV1Conflict
*/
type GetGroupInfoV1Conflict struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewGetGroupInfoV1Conflict creates GetGroupInfoV1Conflict with default headers values
func NewGetGroupInfoV1Conflict() *GetGroupInfoV1Conflict {

	return &GetGroupInfoV1Conflict{}
}

// WithPayload adds the payload to the get group info v1 conflict response
func (o *GetGroupInfoV1Conflict) WithPayload(payload *models.ErrResponse) *GetGroupInfoV1Conflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get group info v1 conflict response
func (o *GetGroupInfoV1Conflict) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetGroupInfoV1Conflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetGroupInfoV1InternalServerErrorCode is the HTTP code returned for type GetGroupInfoV1InternalServerError
const GetGroupInfoV1InternalServerErrorCode int = 500

/*GetGroupInfoV1InternalServerError Internal Server Error

swagger:response getGroupInfoV1InternalServerError
*/
type GetGroupInfoV1InternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewGetGroupInfoV1InternalServerError creates GetGroupInfoV1InternalServerError with default headers values
func NewGetGroupInfoV1InternalServerError() *GetGroupInfoV1InternalServerError {

	return &GetGroupInfoV1InternalServerError{}
}

// WithPayload adds the payload to the get group info v1 internal server error response
func (o *GetGroupInfoV1InternalServerError) WithPayload(payload *models.ErrResponse) *GetGroupInfoV1InternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get group info v1 internal server error response
func (o *GetGroupInfoV1InternalServerError) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetGroupInfoV1InternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
