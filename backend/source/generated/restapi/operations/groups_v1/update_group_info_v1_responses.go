// Code generated by go-swagger; DO NOT EDIT.

package groups_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"2021-fall-cs160-team-Mochi/backend/source/generated/models"
)

// UpdateGroupInfoV1OKCode is the HTTP code returned for type UpdateGroupInfoV1OK
const UpdateGroupInfoV1OKCode int = 200

/*UpdateGroupInfoV1OK Success

swagger:response updateGroupInfoV1OK
*/
type UpdateGroupInfoV1OK struct {

	/*
	  In: Body
	*/
	Payload *models.GroupObj `json:"body,omitempty"`
}

// NewUpdateGroupInfoV1OK creates UpdateGroupInfoV1OK with default headers values
func NewUpdateGroupInfoV1OK() *UpdateGroupInfoV1OK {

	return &UpdateGroupInfoV1OK{}
}

// WithPayload adds the payload to the update group info v1 o k response
func (o *UpdateGroupInfoV1OK) WithPayload(payload *models.GroupObj) *UpdateGroupInfoV1OK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update group info v1 o k response
func (o *UpdateGroupInfoV1OK) SetPayload(payload *models.GroupObj) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateGroupInfoV1OK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateGroupInfoV1BadRequestCode is the HTTP code returned for type UpdateGroupInfoV1BadRequest
const UpdateGroupInfoV1BadRequestCode int = 400

/*UpdateGroupInfoV1BadRequest Bad Request

swagger:response updateGroupInfoV1BadRequest
*/
type UpdateGroupInfoV1BadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewUpdateGroupInfoV1BadRequest creates UpdateGroupInfoV1BadRequest with default headers values
func NewUpdateGroupInfoV1BadRequest() *UpdateGroupInfoV1BadRequest {

	return &UpdateGroupInfoV1BadRequest{}
}

// WithPayload adds the payload to the update group info v1 bad request response
func (o *UpdateGroupInfoV1BadRequest) WithPayload(payload *models.ErrResponse) *UpdateGroupInfoV1BadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update group info v1 bad request response
func (o *UpdateGroupInfoV1BadRequest) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateGroupInfoV1BadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateGroupInfoV1UnauthorizedCode is the HTTP code returned for type UpdateGroupInfoV1Unauthorized
const UpdateGroupInfoV1UnauthorizedCode int = 401

/*UpdateGroupInfoV1Unauthorized Unauthorized

swagger:response updateGroupInfoV1Unauthorized
*/
type UpdateGroupInfoV1Unauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewUpdateGroupInfoV1Unauthorized creates UpdateGroupInfoV1Unauthorized with default headers values
func NewUpdateGroupInfoV1Unauthorized() *UpdateGroupInfoV1Unauthorized {

	return &UpdateGroupInfoV1Unauthorized{}
}

// WithPayload adds the payload to the update group info v1 unauthorized response
func (o *UpdateGroupInfoV1Unauthorized) WithPayload(payload *models.ErrResponse) *UpdateGroupInfoV1Unauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update group info v1 unauthorized response
func (o *UpdateGroupInfoV1Unauthorized) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateGroupInfoV1Unauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateGroupInfoV1ForbiddenCode is the HTTP code returned for type UpdateGroupInfoV1Forbidden
const UpdateGroupInfoV1ForbiddenCode int = 403

/*UpdateGroupInfoV1Forbidden Forbidden

swagger:response updateGroupInfoV1Forbidden
*/
type UpdateGroupInfoV1Forbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewUpdateGroupInfoV1Forbidden creates UpdateGroupInfoV1Forbidden with default headers values
func NewUpdateGroupInfoV1Forbidden() *UpdateGroupInfoV1Forbidden {

	return &UpdateGroupInfoV1Forbidden{}
}

// WithPayload adds the payload to the update group info v1 forbidden response
func (o *UpdateGroupInfoV1Forbidden) WithPayload(payload *models.ErrResponse) *UpdateGroupInfoV1Forbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update group info v1 forbidden response
func (o *UpdateGroupInfoV1Forbidden) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateGroupInfoV1Forbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateGroupInfoV1NotFoundCode is the HTTP code returned for type UpdateGroupInfoV1NotFound
const UpdateGroupInfoV1NotFoundCode int = 404

/*UpdateGroupInfoV1NotFound Not Found

swagger:response updateGroupInfoV1NotFound
*/
type UpdateGroupInfoV1NotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewUpdateGroupInfoV1NotFound creates UpdateGroupInfoV1NotFound with default headers values
func NewUpdateGroupInfoV1NotFound() *UpdateGroupInfoV1NotFound {

	return &UpdateGroupInfoV1NotFound{}
}

// WithPayload adds the payload to the update group info v1 not found response
func (o *UpdateGroupInfoV1NotFound) WithPayload(payload *models.ErrResponse) *UpdateGroupInfoV1NotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update group info v1 not found response
func (o *UpdateGroupInfoV1NotFound) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateGroupInfoV1NotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateGroupInfoV1ConflictCode is the HTTP code returned for type UpdateGroupInfoV1Conflict
const UpdateGroupInfoV1ConflictCode int = 409

/*UpdateGroupInfoV1Conflict Conflict

swagger:response updateGroupInfoV1Conflict
*/
type UpdateGroupInfoV1Conflict struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewUpdateGroupInfoV1Conflict creates UpdateGroupInfoV1Conflict with default headers values
func NewUpdateGroupInfoV1Conflict() *UpdateGroupInfoV1Conflict {

	return &UpdateGroupInfoV1Conflict{}
}

// WithPayload adds the payload to the update group info v1 conflict response
func (o *UpdateGroupInfoV1Conflict) WithPayload(payload *models.ErrResponse) *UpdateGroupInfoV1Conflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update group info v1 conflict response
func (o *UpdateGroupInfoV1Conflict) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateGroupInfoV1Conflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateGroupInfoV1InternalServerErrorCode is the HTTP code returned for type UpdateGroupInfoV1InternalServerError
const UpdateGroupInfoV1InternalServerErrorCode int = 500

/*UpdateGroupInfoV1InternalServerError Internal Server Error

swagger:response updateGroupInfoV1InternalServerError
*/
type UpdateGroupInfoV1InternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewUpdateGroupInfoV1InternalServerError creates UpdateGroupInfoV1InternalServerError with default headers values
func NewUpdateGroupInfoV1InternalServerError() *UpdateGroupInfoV1InternalServerError {

	return &UpdateGroupInfoV1InternalServerError{}
}

// WithPayload adds the payload to the update group info v1 internal server error response
func (o *UpdateGroupInfoV1InternalServerError) WithPayload(payload *models.ErrResponse) *UpdateGroupInfoV1InternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update group info v1 internal server error response
func (o *UpdateGroupInfoV1InternalServerError) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateGroupInfoV1InternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
