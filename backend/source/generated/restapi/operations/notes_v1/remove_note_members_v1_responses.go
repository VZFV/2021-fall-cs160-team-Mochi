// Code generated by go-swagger; DO NOT EDIT.

package notes_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"2021-fall-cs160-team-Mochi/backend/source/generated/models"
)

// RemoveNoteMembersV1OKCode is the HTTP code returned for type RemoveNoteMembersV1OK
const RemoveNoteMembersV1OKCode int = 200

/*RemoveNoteMembersV1OK Success

swagger:response removeNoteMembersV1OK
*/
type RemoveNoteMembersV1OK struct {

	/*
	  In: Body
	*/
	Payload *models.NoteResponse `json:"body,omitempty"`
}

// NewRemoveNoteMembersV1OK creates RemoveNoteMembersV1OK with default headers values
func NewRemoveNoteMembersV1OK() *RemoveNoteMembersV1OK {

	return &RemoveNoteMembersV1OK{}
}

// WithPayload adds the payload to the remove note members v1 o k response
func (o *RemoveNoteMembersV1OK) WithPayload(payload *models.NoteResponse) *RemoveNoteMembersV1OK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the remove note members v1 o k response
func (o *RemoveNoteMembersV1OK) SetPayload(payload *models.NoteResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RemoveNoteMembersV1OK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RemoveNoteMembersV1BadRequestCode is the HTTP code returned for type RemoveNoteMembersV1BadRequest
const RemoveNoteMembersV1BadRequestCode int = 400

/*RemoveNoteMembersV1BadRequest Bad Request

swagger:response removeNoteMembersV1BadRequest
*/
type RemoveNoteMembersV1BadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewRemoveNoteMembersV1BadRequest creates RemoveNoteMembersV1BadRequest with default headers values
func NewRemoveNoteMembersV1BadRequest() *RemoveNoteMembersV1BadRequest {

	return &RemoveNoteMembersV1BadRequest{}
}

// WithPayload adds the payload to the remove note members v1 bad request response
func (o *RemoveNoteMembersV1BadRequest) WithPayload(payload *models.ErrResponse) *RemoveNoteMembersV1BadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the remove note members v1 bad request response
func (o *RemoveNoteMembersV1BadRequest) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RemoveNoteMembersV1BadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RemoveNoteMembersV1UnauthorizedCode is the HTTP code returned for type RemoveNoteMembersV1Unauthorized
const RemoveNoteMembersV1UnauthorizedCode int = 401

/*RemoveNoteMembersV1Unauthorized Unauthorized

swagger:response removeNoteMembersV1Unauthorized
*/
type RemoveNoteMembersV1Unauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewRemoveNoteMembersV1Unauthorized creates RemoveNoteMembersV1Unauthorized with default headers values
func NewRemoveNoteMembersV1Unauthorized() *RemoveNoteMembersV1Unauthorized {

	return &RemoveNoteMembersV1Unauthorized{}
}

// WithPayload adds the payload to the remove note members v1 unauthorized response
func (o *RemoveNoteMembersV1Unauthorized) WithPayload(payload *models.ErrResponse) *RemoveNoteMembersV1Unauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the remove note members v1 unauthorized response
func (o *RemoveNoteMembersV1Unauthorized) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RemoveNoteMembersV1Unauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RemoveNoteMembersV1ForbiddenCode is the HTTP code returned for type RemoveNoteMembersV1Forbidden
const RemoveNoteMembersV1ForbiddenCode int = 403

/*RemoveNoteMembersV1Forbidden Forbidden

swagger:response removeNoteMembersV1Forbidden
*/
type RemoveNoteMembersV1Forbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewRemoveNoteMembersV1Forbidden creates RemoveNoteMembersV1Forbidden with default headers values
func NewRemoveNoteMembersV1Forbidden() *RemoveNoteMembersV1Forbidden {

	return &RemoveNoteMembersV1Forbidden{}
}

// WithPayload adds the payload to the remove note members v1 forbidden response
func (o *RemoveNoteMembersV1Forbidden) WithPayload(payload *models.ErrResponse) *RemoveNoteMembersV1Forbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the remove note members v1 forbidden response
func (o *RemoveNoteMembersV1Forbidden) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RemoveNoteMembersV1Forbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RemoveNoteMembersV1NotFoundCode is the HTTP code returned for type RemoveNoteMembersV1NotFound
const RemoveNoteMembersV1NotFoundCode int = 404

/*RemoveNoteMembersV1NotFound Not Found

swagger:response removeNoteMembersV1NotFound
*/
type RemoveNoteMembersV1NotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewRemoveNoteMembersV1NotFound creates RemoveNoteMembersV1NotFound with default headers values
func NewRemoveNoteMembersV1NotFound() *RemoveNoteMembersV1NotFound {

	return &RemoveNoteMembersV1NotFound{}
}

// WithPayload adds the payload to the remove note members v1 not found response
func (o *RemoveNoteMembersV1NotFound) WithPayload(payload *models.ErrResponse) *RemoveNoteMembersV1NotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the remove note members v1 not found response
func (o *RemoveNoteMembersV1NotFound) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RemoveNoteMembersV1NotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RemoveNoteMembersV1ConflictCode is the HTTP code returned for type RemoveNoteMembersV1Conflict
const RemoveNoteMembersV1ConflictCode int = 409

/*RemoveNoteMembersV1Conflict Conflict

swagger:response removeNoteMembersV1Conflict
*/
type RemoveNoteMembersV1Conflict struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewRemoveNoteMembersV1Conflict creates RemoveNoteMembersV1Conflict with default headers values
func NewRemoveNoteMembersV1Conflict() *RemoveNoteMembersV1Conflict {

	return &RemoveNoteMembersV1Conflict{}
}

// WithPayload adds the payload to the remove note members v1 conflict response
func (o *RemoveNoteMembersV1Conflict) WithPayload(payload *models.ErrResponse) *RemoveNoteMembersV1Conflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the remove note members v1 conflict response
func (o *RemoveNoteMembersV1Conflict) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RemoveNoteMembersV1Conflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RemoveNoteMembersV1InternalServerErrorCode is the HTTP code returned for type RemoveNoteMembersV1InternalServerError
const RemoveNoteMembersV1InternalServerErrorCode int = 500

/*RemoveNoteMembersV1InternalServerError Internal Server Error

swagger:response removeNoteMembersV1InternalServerError
*/
type RemoveNoteMembersV1InternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewRemoveNoteMembersV1InternalServerError creates RemoveNoteMembersV1InternalServerError with default headers values
func NewRemoveNoteMembersV1InternalServerError() *RemoveNoteMembersV1InternalServerError {

	return &RemoveNoteMembersV1InternalServerError{}
}

// WithPayload adds the payload to the remove note members v1 internal server error response
func (o *RemoveNoteMembersV1InternalServerError) WithPayload(payload *models.ErrResponse) *RemoveNoteMembersV1InternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the remove note members v1 internal server error response
func (o *RemoveNoteMembersV1InternalServerError) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RemoveNoteMembersV1InternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
