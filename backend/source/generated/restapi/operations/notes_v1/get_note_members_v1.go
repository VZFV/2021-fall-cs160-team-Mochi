// Code generated by go-swagger; DO NOT EDIT.

package notes_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetNoteMembersV1HandlerFunc turns a function with the right signature into a get note members v1 handler
type GetNoteMembersV1HandlerFunc func(GetNoteMembersV1Params) middleware.Responder

// Handle executing the request and returning a response
func (fn GetNoteMembersV1HandlerFunc) Handle(params GetNoteMembersV1Params) middleware.Responder {
	return fn(params)
}

// GetNoteMembersV1Handler interface for that can handle valid get note members v1 params
type GetNoteMembersV1Handler interface {
	Handle(GetNoteMembersV1Params) middleware.Responder
}

// NewGetNoteMembersV1 creates a new http.Handler for the get note members v1 operation
func NewGetNoteMembersV1(ctx *middleware.Context, handler GetNoteMembersV1Handler) *GetNoteMembersV1 {
	return &GetNoteMembersV1{Context: ctx, Handler: handler}
}

/* GetNoteMembersV1 swagger:route GET /v1/notes/{id}/members notesV1 getNoteMembersV1

get members of notes

get members of notes

*/
type GetNoteMembersV1 struct {
	Context *middleware.Context
	Handler GetNoteMembersV1Handler
}

func (o *GetNoteMembersV1) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetNoteMembersV1Params()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
