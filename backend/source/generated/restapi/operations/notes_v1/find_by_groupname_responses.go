// Code generated by go-swagger; DO NOT EDIT.

package notes_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"2021-fall-cs160-team-Mochi/backend/source/generated/models"
)

// FindByGroupnameOKCode is the HTTP code returned for type FindByGroupnameOK
const FindByGroupnameOKCode int = 200

/*FindByGroupnameOK Success

swagger:response findByGroupnameOK
*/
type FindByGroupnameOK struct {

	/*
	  In: Body
	*/
	Payload models.NoteGetResponse `json:"body,omitempty"`
}

// NewFindByGroupnameOK creates FindByGroupnameOK with default headers values
func NewFindByGroupnameOK() *FindByGroupnameOK {

	return &FindByGroupnameOK{}
}

// WithPayload adds the payload to the find by groupname o k response
func (o *FindByGroupnameOK) WithPayload(payload models.NoteGetResponse) *FindByGroupnameOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find by groupname o k response
func (o *FindByGroupnameOK) SetPayload(payload models.NoteGetResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindByGroupnameOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = models.NoteGetResponse{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// FindByGroupnameBadRequestCode is the HTTP code returned for type FindByGroupnameBadRequest
const FindByGroupnameBadRequestCode int = 400

/*FindByGroupnameBadRequest Bad Request

swagger:response findByGroupnameBadRequest
*/
type FindByGroupnameBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewFindByGroupnameBadRequest creates FindByGroupnameBadRequest with default headers values
func NewFindByGroupnameBadRequest() *FindByGroupnameBadRequest {

	return &FindByGroupnameBadRequest{}
}

// WithPayload adds the payload to the find by groupname bad request response
func (o *FindByGroupnameBadRequest) WithPayload(payload *models.ErrResponse) *FindByGroupnameBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find by groupname bad request response
func (o *FindByGroupnameBadRequest) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindByGroupnameBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// FindByGroupnameUnauthorizedCode is the HTTP code returned for type FindByGroupnameUnauthorized
const FindByGroupnameUnauthorizedCode int = 401

/*FindByGroupnameUnauthorized Unauthorized

swagger:response findByGroupnameUnauthorized
*/
type FindByGroupnameUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewFindByGroupnameUnauthorized creates FindByGroupnameUnauthorized with default headers values
func NewFindByGroupnameUnauthorized() *FindByGroupnameUnauthorized {

	return &FindByGroupnameUnauthorized{}
}

// WithPayload adds the payload to the find by groupname unauthorized response
func (o *FindByGroupnameUnauthorized) WithPayload(payload *models.ErrResponse) *FindByGroupnameUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find by groupname unauthorized response
func (o *FindByGroupnameUnauthorized) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindByGroupnameUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// FindByGroupnameForbiddenCode is the HTTP code returned for type FindByGroupnameForbidden
const FindByGroupnameForbiddenCode int = 403

/*FindByGroupnameForbidden Forbidden

swagger:response findByGroupnameForbidden
*/
type FindByGroupnameForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewFindByGroupnameForbidden creates FindByGroupnameForbidden with default headers values
func NewFindByGroupnameForbidden() *FindByGroupnameForbidden {

	return &FindByGroupnameForbidden{}
}

// WithPayload adds the payload to the find by groupname forbidden response
func (o *FindByGroupnameForbidden) WithPayload(payload *models.ErrResponse) *FindByGroupnameForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find by groupname forbidden response
func (o *FindByGroupnameForbidden) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindByGroupnameForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// FindByGroupnameNotFoundCode is the HTTP code returned for type FindByGroupnameNotFound
const FindByGroupnameNotFoundCode int = 404

/*FindByGroupnameNotFound Not Found

swagger:response findByGroupnameNotFound
*/
type FindByGroupnameNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewFindByGroupnameNotFound creates FindByGroupnameNotFound with default headers values
func NewFindByGroupnameNotFound() *FindByGroupnameNotFound {

	return &FindByGroupnameNotFound{}
}

// WithPayload adds the payload to the find by groupname not found response
func (o *FindByGroupnameNotFound) WithPayload(payload *models.ErrResponse) *FindByGroupnameNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find by groupname not found response
func (o *FindByGroupnameNotFound) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindByGroupnameNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// FindByGroupnameConflictCode is the HTTP code returned for type FindByGroupnameConflict
const FindByGroupnameConflictCode int = 409

/*FindByGroupnameConflict Conflict

swagger:response findByGroupnameConflict
*/
type FindByGroupnameConflict struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewFindByGroupnameConflict creates FindByGroupnameConflict with default headers values
func NewFindByGroupnameConflict() *FindByGroupnameConflict {

	return &FindByGroupnameConflict{}
}

// WithPayload adds the payload to the find by groupname conflict response
func (o *FindByGroupnameConflict) WithPayload(payload *models.ErrResponse) *FindByGroupnameConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find by groupname conflict response
func (o *FindByGroupnameConflict) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindByGroupnameConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// FindByGroupnameInternalServerErrorCode is the HTTP code returned for type FindByGroupnameInternalServerError
const FindByGroupnameInternalServerErrorCode int = 500

/*FindByGroupnameInternalServerError Internal Server Error

swagger:response findByGroupnameInternalServerError
*/
type FindByGroupnameInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewFindByGroupnameInternalServerError creates FindByGroupnameInternalServerError with default headers values
func NewFindByGroupnameInternalServerError() *FindByGroupnameInternalServerError {

	return &FindByGroupnameInternalServerError{}
}

// WithPayload adds the payload to the find by groupname internal server error response
func (o *FindByGroupnameInternalServerError) WithPayload(payload *models.ErrResponse) *FindByGroupnameInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find by groupname internal server error response
func (o *FindByGroupnameInternalServerError) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindByGroupnameInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
