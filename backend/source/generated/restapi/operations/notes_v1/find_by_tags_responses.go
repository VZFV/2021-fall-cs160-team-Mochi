// Code generated by go-swagger; DO NOT EDIT.

package notes_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"2021-fall-cs160-team-Mochi/backend/source/generated/models"
)

// FindByTagsOKCode is the HTTP code returned for type FindByTagsOK
const FindByTagsOKCode int = 200

/*FindByTagsOK Success

swagger:response findByTagsOK
*/
type FindByTagsOK struct {

	/*
	  In: Body
	*/
	Payload models.NoteGetResponse `json:"body,omitempty"`
}

// NewFindByTagsOK creates FindByTagsOK with default headers values
func NewFindByTagsOK() *FindByTagsOK {

	return &FindByTagsOK{}
}

// WithPayload adds the payload to the find by tags o k response
func (o *FindByTagsOK) WithPayload(payload models.NoteGetResponse) *FindByTagsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find by tags o k response
func (o *FindByTagsOK) SetPayload(payload models.NoteGetResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindByTagsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = models.NoteGetResponse{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// FindByTagsBadRequestCode is the HTTP code returned for type FindByTagsBadRequest
const FindByTagsBadRequestCode int = 400

/*FindByTagsBadRequest Bad Request

swagger:response findByTagsBadRequest
*/
type FindByTagsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewFindByTagsBadRequest creates FindByTagsBadRequest with default headers values
func NewFindByTagsBadRequest() *FindByTagsBadRequest {

	return &FindByTagsBadRequest{}
}

// WithPayload adds the payload to the find by tags bad request response
func (o *FindByTagsBadRequest) WithPayload(payload *models.ErrResponse) *FindByTagsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find by tags bad request response
func (o *FindByTagsBadRequest) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindByTagsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// FindByTagsUnauthorizedCode is the HTTP code returned for type FindByTagsUnauthorized
const FindByTagsUnauthorizedCode int = 401

/*FindByTagsUnauthorized Unauthorized

swagger:response findByTagsUnauthorized
*/
type FindByTagsUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewFindByTagsUnauthorized creates FindByTagsUnauthorized with default headers values
func NewFindByTagsUnauthorized() *FindByTagsUnauthorized {

	return &FindByTagsUnauthorized{}
}

// WithPayload adds the payload to the find by tags unauthorized response
func (o *FindByTagsUnauthorized) WithPayload(payload *models.ErrResponse) *FindByTagsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find by tags unauthorized response
func (o *FindByTagsUnauthorized) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindByTagsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// FindByTagsForbiddenCode is the HTTP code returned for type FindByTagsForbidden
const FindByTagsForbiddenCode int = 403

/*FindByTagsForbidden Forbidden

swagger:response findByTagsForbidden
*/
type FindByTagsForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewFindByTagsForbidden creates FindByTagsForbidden with default headers values
func NewFindByTagsForbidden() *FindByTagsForbidden {

	return &FindByTagsForbidden{}
}

// WithPayload adds the payload to the find by tags forbidden response
func (o *FindByTagsForbidden) WithPayload(payload *models.ErrResponse) *FindByTagsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find by tags forbidden response
func (o *FindByTagsForbidden) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindByTagsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// FindByTagsNotFoundCode is the HTTP code returned for type FindByTagsNotFound
const FindByTagsNotFoundCode int = 404

/*FindByTagsNotFound Not Found

swagger:response findByTagsNotFound
*/
type FindByTagsNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewFindByTagsNotFound creates FindByTagsNotFound with default headers values
func NewFindByTagsNotFound() *FindByTagsNotFound {

	return &FindByTagsNotFound{}
}

// WithPayload adds the payload to the find by tags not found response
func (o *FindByTagsNotFound) WithPayload(payload *models.ErrResponse) *FindByTagsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find by tags not found response
func (o *FindByTagsNotFound) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindByTagsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// FindByTagsConflictCode is the HTTP code returned for type FindByTagsConflict
const FindByTagsConflictCode int = 409

/*FindByTagsConflict Conflict

swagger:response findByTagsConflict
*/
type FindByTagsConflict struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewFindByTagsConflict creates FindByTagsConflict with default headers values
func NewFindByTagsConflict() *FindByTagsConflict {

	return &FindByTagsConflict{}
}

// WithPayload adds the payload to the find by tags conflict response
func (o *FindByTagsConflict) WithPayload(payload *models.ErrResponse) *FindByTagsConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find by tags conflict response
func (o *FindByTagsConflict) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindByTagsConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// FindByTagsInternalServerErrorCode is the HTTP code returned for type FindByTagsInternalServerError
const FindByTagsInternalServerErrorCode int = 500

/*FindByTagsInternalServerError Internal Server Error

swagger:response findByTagsInternalServerError
*/
type FindByTagsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewFindByTagsInternalServerError creates FindByTagsInternalServerError with default headers values
func NewFindByTagsInternalServerError() *FindByTagsInternalServerError {

	return &FindByTagsInternalServerError{}
}

// WithPayload adds the payload to the find by tags internal server error response
func (o *FindByTagsInternalServerError) WithPayload(payload *models.ErrResponse) *FindByTagsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find by tags internal server error response
func (o *FindByTagsInternalServerError) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindByTagsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
