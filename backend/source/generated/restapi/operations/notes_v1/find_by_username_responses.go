// Code generated by go-swagger; DO NOT EDIT.

package notes_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"2021-fall-cs160-team-Mochi/backend/source/generated/models"
)

// FindByUsernameOKCode is the HTTP code returned for type FindByUsernameOK
const FindByUsernameOKCode int = 200

/*FindByUsernameOK Success

swagger:response findByUsernameOK
*/
type FindByUsernameOK struct {

	/*
	  In: Body
	*/
	Payload models.NoteGetResponse `json:"body,omitempty"`
}

// NewFindByUsernameOK creates FindByUsernameOK with default headers values
func NewFindByUsernameOK() *FindByUsernameOK {

	return &FindByUsernameOK{}
}

// WithPayload adds the payload to the find by username o k response
func (o *FindByUsernameOK) WithPayload(payload models.NoteGetResponse) *FindByUsernameOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find by username o k response
func (o *FindByUsernameOK) SetPayload(payload models.NoteGetResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindByUsernameOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = models.NoteGetResponse{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// FindByUsernameBadRequestCode is the HTTP code returned for type FindByUsernameBadRequest
const FindByUsernameBadRequestCode int = 400

/*FindByUsernameBadRequest Bad Request

swagger:response findByUsernameBadRequest
*/
type FindByUsernameBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewFindByUsernameBadRequest creates FindByUsernameBadRequest with default headers values
func NewFindByUsernameBadRequest() *FindByUsernameBadRequest {

	return &FindByUsernameBadRequest{}
}

// WithPayload adds the payload to the find by username bad request response
func (o *FindByUsernameBadRequest) WithPayload(payload *models.ErrResponse) *FindByUsernameBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find by username bad request response
func (o *FindByUsernameBadRequest) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindByUsernameBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// FindByUsernameUnauthorizedCode is the HTTP code returned for type FindByUsernameUnauthorized
const FindByUsernameUnauthorizedCode int = 401

/*FindByUsernameUnauthorized Unauthorized

swagger:response findByUsernameUnauthorized
*/
type FindByUsernameUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewFindByUsernameUnauthorized creates FindByUsernameUnauthorized with default headers values
func NewFindByUsernameUnauthorized() *FindByUsernameUnauthorized {

	return &FindByUsernameUnauthorized{}
}

// WithPayload adds the payload to the find by username unauthorized response
func (o *FindByUsernameUnauthorized) WithPayload(payload *models.ErrResponse) *FindByUsernameUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find by username unauthorized response
func (o *FindByUsernameUnauthorized) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindByUsernameUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// FindByUsernameForbiddenCode is the HTTP code returned for type FindByUsernameForbidden
const FindByUsernameForbiddenCode int = 403

/*FindByUsernameForbidden Forbidden

swagger:response findByUsernameForbidden
*/
type FindByUsernameForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewFindByUsernameForbidden creates FindByUsernameForbidden with default headers values
func NewFindByUsernameForbidden() *FindByUsernameForbidden {

	return &FindByUsernameForbidden{}
}

// WithPayload adds the payload to the find by username forbidden response
func (o *FindByUsernameForbidden) WithPayload(payload *models.ErrResponse) *FindByUsernameForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find by username forbidden response
func (o *FindByUsernameForbidden) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindByUsernameForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// FindByUsernameNotFoundCode is the HTTP code returned for type FindByUsernameNotFound
const FindByUsernameNotFoundCode int = 404

/*FindByUsernameNotFound Not Found

swagger:response findByUsernameNotFound
*/
type FindByUsernameNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewFindByUsernameNotFound creates FindByUsernameNotFound with default headers values
func NewFindByUsernameNotFound() *FindByUsernameNotFound {

	return &FindByUsernameNotFound{}
}

// WithPayload adds the payload to the find by username not found response
func (o *FindByUsernameNotFound) WithPayload(payload *models.ErrResponse) *FindByUsernameNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find by username not found response
func (o *FindByUsernameNotFound) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindByUsernameNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// FindByUsernameConflictCode is the HTTP code returned for type FindByUsernameConflict
const FindByUsernameConflictCode int = 409

/*FindByUsernameConflict Conflict

swagger:response findByUsernameConflict
*/
type FindByUsernameConflict struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewFindByUsernameConflict creates FindByUsernameConflict with default headers values
func NewFindByUsernameConflict() *FindByUsernameConflict {

	return &FindByUsernameConflict{}
}

// WithPayload adds the payload to the find by username conflict response
func (o *FindByUsernameConflict) WithPayload(payload *models.ErrResponse) *FindByUsernameConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find by username conflict response
func (o *FindByUsernameConflict) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindByUsernameConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// FindByUsernameInternalServerErrorCode is the HTTP code returned for type FindByUsernameInternalServerError
const FindByUsernameInternalServerErrorCode int = 500

/*FindByUsernameInternalServerError Internal Server Error

swagger:response findByUsernameInternalServerError
*/
type FindByUsernameInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewFindByUsernameInternalServerError creates FindByUsernameInternalServerError with default headers values
func NewFindByUsernameInternalServerError() *FindByUsernameInternalServerError {

	return &FindByUsernameInternalServerError{}
}

// WithPayload adds the payload to the find by username internal server error response
func (o *FindByUsernameInternalServerError) WithPayload(payload *models.ErrResponse) *FindByUsernameInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find by username internal server error response
func (o *FindByUsernameInternalServerError) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindByUsernameInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
