// Code generated by go-swagger; DO NOT EDIT.

package notes_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"2021-fall-cs160-team-Mochi/backend/source/generated/models"
)

// GetMultipleFilesV1OKCode is the HTTP code returned for type GetMultipleFilesV1OK
const GetMultipleFilesV1OKCode int = 200

/*GetMultipleFilesV1OK Success

swagger:response getMultipleFilesV1OK
*/
type GetMultipleFilesV1OK struct {

	/*
	  In: Body
	*/
	Payload *models.GetFilesResponse `json:"body,omitempty"`
}

// NewGetMultipleFilesV1OK creates GetMultipleFilesV1OK with default headers values
func NewGetMultipleFilesV1OK() *GetMultipleFilesV1OK {

	return &GetMultipleFilesV1OK{}
}

// WithPayload adds the payload to the get multiple files v1 o k response
func (o *GetMultipleFilesV1OK) WithPayload(payload *models.GetFilesResponse) *GetMultipleFilesV1OK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get multiple files v1 o k response
func (o *GetMultipleFilesV1OK) SetPayload(payload *models.GetFilesResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMultipleFilesV1OK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetMultipleFilesV1BadRequestCode is the HTTP code returned for type GetMultipleFilesV1BadRequest
const GetMultipleFilesV1BadRequestCode int = 400

/*GetMultipleFilesV1BadRequest Bad Request

swagger:response getMultipleFilesV1BadRequest
*/
type GetMultipleFilesV1BadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewGetMultipleFilesV1BadRequest creates GetMultipleFilesV1BadRequest with default headers values
func NewGetMultipleFilesV1BadRequest() *GetMultipleFilesV1BadRequest {

	return &GetMultipleFilesV1BadRequest{}
}

// WithPayload adds the payload to the get multiple files v1 bad request response
func (o *GetMultipleFilesV1BadRequest) WithPayload(payload *models.ErrResponse) *GetMultipleFilesV1BadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get multiple files v1 bad request response
func (o *GetMultipleFilesV1BadRequest) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMultipleFilesV1BadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetMultipleFilesV1UnauthorizedCode is the HTTP code returned for type GetMultipleFilesV1Unauthorized
const GetMultipleFilesV1UnauthorizedCode int = 401

/*GetMultipleFilesV1Unauthorized Unauthorized

swagger:response getMultipleFilesV1Unauthorized
*/
type GetMultipleFilesV1Unauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewGetMultipleFilesV1Unauthorized creates GetMultipleFilesV1Unauthorized with default headers values
func NewGetMultipleFilesV1Unauthorized() *GetMultipleFilesV1Unauthorized {

	return &GetMultipleFilesV1Unauthorized{}
}

// WithPayload adds the payload to the get multiple files v1 unauthorized response
func (o *GetMultipleFilesV1Unauthorized) WithPayload(payload *models.ErrResponse) *GetMultipleFilesV1Unauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get multiple files v1 unauthorized response
func (o *GetMultipleFilesV1Unauthorized) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMultipleFilesV1Unauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetMultipleFilesV1ForbiddenCode is the HTTP code returned for type GetMultipleFilesV1Forbidden
const GetMultipleFilesV1ForbiddenCode int = 403

/*GetMultipleFilesV1Forbidden Forbidden

swagger:response getMultipleFilesV1Forbidden
*/
type GetMultipleFilesV1Forbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewGetMultipleFilesV1Forbidden creates GetMultipleFilesV1Forbidden with default headers values
func NewGetMultipleFilesV1Forbidden() *GetMultipleFilesV1Forbidden {

	return &GetMultipleFilesV1Forbidden{}
}

// WithPayload adds the payload to the get multiple files v1 forbidden response
func (o *GetMultipleFilesV1Forbidden) WithPayload(payload *models.ErrResponse) *GetMultipleFilesV1Forbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get multiple files v1 forbidden response
func (o *GetMultipleFilesV1Forbidden) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMultipleFilesV1Forbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetMultipleFilesV1NotFoundCode is the HTTP code returned for type GetMultipleFilesV1NotFound
const GetMultipleFilesV1NotFoundCode int = 404

/*GetMultipleFilesV1NotFound Not Found

swagger:response getMultipleFilesV1NotFound
*/
type GetMultipleFilesV1NotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewGetMultipleFilesV1NotFound creates GetMultipleFilesV1NotFound with default headers values
func NewGetMultipleFilesV1NotFound() *GetMultipleFilesV1NotFound {

	return &GetMultipleFilesV1NotFound{}
}

// WithPayload adds the payload to the get multiple files v1 not found response
func (o *GetMultipleFilesV1NotFound) WithPayload(payload *models.ErrResponse) *GetMultipleFilesV1NotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get multiple files v1 not found response
func (o *GetMultipleFilesV1NotFound) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMultipleFilesV1NotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetMultipleFilesV1ConflictCode is the HTTP code returned for type GetMultipleFilesV1Conflict
const GetMultipleFilesV1ConflictCode int = 409

/*GetMultipleFilesV1Conflict Conflict

swagger:response getMultipleFilesV1Conflict
*/
type GetMultipleFilesV1Conflict struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewGetMultipleFilesV1Conflict creates GetMultipleFilesV1Conflict with default headers values
func NewGetMultipleFilesV1Conflict() *GetMultipleFilesV1Conflict {

	return &GetMultipleFilesV1Conflict{}
}

// WithPayload adds the payload to the get multiple files v1 conflict response
func (o *GetMultipleFilesV1Conflict) WithPayload(payload *models.ErrResponse) *GetMultipleFilesV1Conflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get multiple files v1 conflict response
func (o *GetMultipleFilesV1Conflict) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMultipleFilesV1Conflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetMultipleFilesV1InternalServerErrorCode is the HTTP code returned for type GetMultipleFilesV1InternalServerError
const GetMultipleFilesV1InternalServerErrorCode int = 500

/*GetMultipleFilesV1InternalServerError Internal Server Error

swagger:response getMultipleFilesV1InternalServerError
*/
type GetMultipleFilesV1InternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewGetMultipleFilesV1InternalServerError creates GetMultipleFilesV1InternalServerError with default headers values
func NewGetMultipleFilesV1InternalServerError() *GetMultipleFilesV1InternalServerError {

	return &GetMultipleFilesV1InternalServerError{}
}

// WithPayload adds the payload to the get multiple files v1 internal server error response
func (o *GetMultipleFilesV1InternalServerError) WithPayload(payload *models.ErrResponse) *GetMultipleFilesV1InternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get multiple files v1 internal server error response
func (o *GetMultipleFilesV1InternalServerError) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMultipleFilesV1InternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
