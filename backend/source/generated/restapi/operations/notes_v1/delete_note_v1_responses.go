// Code generated by go-swagger; DO NOT EDIT.

package notes_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"2021-fall-cs160-team-Mochi/backend/source/generated/models"
)

// DeleteNoteV1OKCode is the HTTP code returned for type DeleteNoteV1OK
const DeleteNoteV1OKCode int = 200

/*DeleteNoteV1OK Success

swagger:response deleteNoteV1OK
*/
type DeleteNoteV1OK struct {

	/*
	  In: Body
	*/
	Payload *models.NoteResponse `json:"body,omitempty"`
}

// NewDeleteNoteV1OK creates DeleteNoteV1OK with default headers values
func NewDeleteNoteV1OK() *DeleteNoteV1OK {

	return &DeleteNoteV1OK{}
}

// WithPayload adds the payload to the delete note v1 o k response
func (o *DeleteNoteV1OK) WithPayload(payload *models.NoteResponse) *DeleteNoteV1OK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete note v1 o k response
func (o *DeleteNoteV1OK) SetPayload(payload *models.NoteResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteNoteV1OK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteNoteV1BadRequestCode is the HTTP code returned for type DeleteNoteV1BadRequest
const DeleteNoteV1BadRequestCode int = 400

/*DeleteNoteV1BadRequest Bad Request

swagger:response deleteNoteV1BadRequest
*/
type DeleteNoteV1BadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewDeleteNoteV1BadRequest creates DeleteNoteV1BadRequest with default headers values
func NewDeleteNoteV1BadRequest() *DeleteNoteV1BadRequest {

	return &DeleteNoteV1BadRequest{}
}

// WithPayload adds the payload to the delete note v1 bad request response
func (o *DeleteNoteV1BadRequest) WithPayload(payload *models.ErrResponse) *DeleteNoteV1BadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete note v1 bad request response
func (o *DeleteNoteV1BadRequest) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteNoteV1BadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteNoteV1UnauthorizedCode is the HTTP code returned for type DeleteNoteV1Unauthorized
const DeleteNoteV1UnauthorizedCode int = 401

/*DeleteNoteV1Unauthorized Unauthorized

swagger:response deleteNoteV1Unauthorized
*/
type DeleteNoteV1Unauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewDeleteNoteV1Unauthorized creates DeleteNoteV1Unauthorized with default headers values
func NewDeleteNoteV1Unauthorized() *DeleteNoteV1Unauthorized {

	return &DeleteNoteV1Unauthorized{}
}

// WithPayload adds the payload to the delete note v1 unauthorized response
func (o *DeleteNoteV1Unauthorized) WithPayload(payload *models.ErrResponse) *DeleteNoteV1Unauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete note v1 unauthorized response
func (o *DeleteNoteV1Unauthorized) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteNoteV1Unauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteNoteV1ForbiddenCode is the HTTP code returned for type DeleteNoteV1Forbidden
const DeleteNoteV1ForbiddenCode int = 403

/*DeleteNoteV1Forbidden Forbidden

swagger:response deleteNoteV1Forbidden
*/
type DeleteNoteV1Forbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewDeleteNoteV1Forbidden creates DeleteNoteV1Forbidden with default headers values
func NewDeleteNoteV1Forbidden() *DeleteNoteV1Forbidden {

	return &DeleteNoteV1Forbidden{}
}

// WithPayload adds the payload to the delete note v1 forbidden response
func (o *DeleteNoteV1Forbidden) WithPayload(payload *models.ErrResponse) *DeleteNoteV1Forbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete note v1 forbidden response
func (o *DeleteNoteV1Forbidden) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteNoteV1Forbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteNoteV1NotFoundCode is the HTTP code returned for type DeleteNoteV1NotFound
const DeleteNoteV1NotFoundCode int = 404

/*DeleteNoteV1NotFound Not Found

swagger:response deleteNoteV1NotFound
*/
type DeleteNoteV1NotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewDeleteNoteV1NotFound creates DeleteNoteV1NotFound with default headers values
func NewDeleteNoteV1NotFound() *DeleteNoteV1NotFound {

	return &DeleteNoteV1NotFound{}
}

// WithPayload adds the payload to the delete note v1 not found response
func (o *DeleteNoteV1NotFound) WithPayload(payload *models.ErrResponse) *DeleteNoteV1NotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete note v1 not found response
func (o *DeleteNoteV1NotFound) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteNoteV1NotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteNoteV1ConflictCode is the HTTP code returned for type DeleteNoteV1Conflict
const DeleteNoteV1ConflictCode int = 409

/*DeleteNoteV1Conflict Conflict

swagger:response deleteNoteV1Conflict
*/
type DeleteNoteV1Conflict struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewDeleteNoteV1Conflict creates DeleteNoteV1Conflict with default headers values
func NewDeleteNoteV1Conflict() *DeleteNoteV1Conflict {

	return &DeleteNoteV1Conflict{}
}

// WithPayload adds the payload to the delete note v1 conflict response
func (o *DeleteNoteV1Conflict) WithPayload(payload *models.ErrResponse) *DeleteNoteV1Conflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete note v1 conflict response
func (o *DeleteNoteV1Conflict) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteNoteV1Conflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteNoteV1InternalServerErrorCode is the HTTP code returned for type DeleteNoteV1InternalServerError
const DeleteNoteV1InternalServerErrorCode int = 500

/*DeleteNoteV1InternalServerError Internal Server Error

swagger:response deleteNoteV1InternalServerError
*/
type DeleteNoteV1InternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewDeleteNoteV1InternalServerError creates DeleteNoteV1InternalServerError with default headers values
func NewDeleteNoteV1InternalServerError() *DeleteNoteV1InternalServerError {

	return &DeleteNoteV1InternalServerError{}
}

// WithPayload adds the payload to the delete note v1 internal server error response
func (o *DeleteNoteV1InternalServerError) WithPayload(payload *models.ErrResponse) *DeleteNoteV1InternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete note v1 internal server error response
func (o *DeleteNoteV1InternalServerError) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteNoteV1InternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
