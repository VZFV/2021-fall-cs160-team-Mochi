// Code generated by go-swagger; DO NOT EDIT.

package notes_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"2021-fall-cs160-team-Mochi/backend/source/generated/models"
)

// FindNotesByGroupnameOKCode is the HTTP code returned for type FindNotesByGroupnameOK
const FindNotesByGroupnameOKCode int = 200

/*FindNotesByGroupnameOK Success

swagger:response findNotesByGroupnameOK
*/
type FindNotesByGroupnameOK struct {

	/*
	  In: Body
	*/
	Payload *models.NotesGetResponse `json:"body,omitempty"`
}

// NewFindNotesByGroupnameOK creates FindNotesByGroupnameOK with default headers values
func NewFindNotesByGroupnameOK() *FindNotesByGroupnameOK {

	return &FindNotesByGroupnameOK{}
}

// WithPayload adds the payload to the find notes by groupname o k response
func (o *FindNotesByGroupnameOK) WithPayload(payload *models.NotesGetResponse) *FindNotesByGroupnameOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find notes by groupname o k response
func (o *FindNotesByGroupnameOK) SetPayload(payload *models.NotesGetResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindNotesByGroupnameOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// FindNotesByGroupnameBadRequestCode is the HTTP code returned for type FindNotesByGroupnameBadRequest
const FindNotesByGroupnameBadRequestCode int = 400

/*FindNotesByGroupnameBadRequest Bad Request

swagger:response findNotesByGroupnameBadRequest
*/
type FindNotesByGroupnameBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewFindNotesByGroupnameBadRequest creates FindNotesByGroupnameBadRequest with default headers values
func NewFindNotesByGroupnameBadRequest() *FindNotesByGroupnameBadRequest {

	return &FindNotesByGroupnameBadRequest{}
}

// WithPayload adds the payload to the find notes by groupname bad request response
func (o *FindNotesByGroupnameBadRequest) WithPayload(payload *models.ErrResponse) *FindNotesByGroupnameBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find notes by groupname bad request response
func (o *FindNotesByGroupnameBadRequest) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindNotesByGroupnameBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// FindNotesByGroupnameUnauthorizedCode is the HTTP code returned for type FindNotesByGroupnameUnauthorized
const FindNotesByGroupnameUnauthorizedCode int = 401

/*FindNotesByGroupnameUnauthorized Unauthorized

swagger:response findNotesByGroupnameUnauthorized
*/
type FindNotesByGroupnameUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewFindNotesByGroupnameUnauthorized creates FindNotesByGroupnameUnauthorized with default headers values
func NewFindNotesByGroupnameUnauthorized() *FindNotesByGroupnameUnauthorized {

	return &FindNotesByGroupnameUnauthorized{}
}

// WithPayload adds the payload to the find notes by groupname unauthorized response
func (o *FindNotesByGroupnameUnauthorized) WithPayload(payload *models.ErrResponse) *FindNotesByGroupnameUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find notes by groupname unauthorized response
func (o *FindNotesByGroupnameUnauthorized) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindNotesByGroupnameUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// FindNotesByGroupnameForbiddenCode is the HTTP code returned for type FindNotesByGroupnameForbidden
const FindNotesByGroupnameForbiddenCode int = 403

/*FindNotesByGroupnameForbidden Forbidden

swagger:response findNotesByGroupnameForbidden
*/
type FindNotesByGroupnameForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewFindNotesByGroupnameForbidden creates FindNotesByGroupnameForbidden with default headers values
func NewFindNotesByGroupnameForbidden() *FindNotesByGroupnameForbidden {

	return &FindNotesByGroupnameForbidden{}
}

// WithPayload adds the payload to the find notes by groupname forbidden response
func (o *FindNotesByGroupnameForbidden) WithPayload(payload *models.ErrResponse) *FindNotesByGroupnameForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find notes by groupname forbidden response
func (o *FindNotesByGroupnameForbidden) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindNotesByGroupnameForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// FindNotesByGroupnameNotFoundCode is the HTTP code returned for type FindNotesByGroupnameNotFound
const FindNotesByGroupnameNotFoundCode int = 404

/*FindNotesByGroupnameNotFound Not Found

swagger:response findNotesByGroupnameNotFound
*/
type FindNotesByGroupnameNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewFindNotesByGroupnameNotFound creates FindNotesByGroupnameNotFound with default headers values
func NewFindNotesByGroupnameNotFound() *FindNotesByGroupnameNotFound {

	return &FindNotesByGroupnameNotFound{}
}

// WithPayload adds the payload to the find notes by groupname not found response
func (o *FindNotesByGroupnameNotFound) WithPayload(payload *models.ErrResponse) *FindNotesByGroupnameNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find notes by groupname not found response
func (o *FindNotesByGroupnameNotFound) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindNotesByGroupnameNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// FindNotesByGroupnameConflictCode is the HTTP code returned for type FindNotesByGroupnameConflict
const FindNotesByGroupnameConflictCode int = 409

/*FindNotesByGroupnameConflict Conflict

swagger:response findNotesByGroupnameConflict
*/
type FindNotesByGroupnameConflict struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewFindNotesByGroupnameConflict creates FindNotesByGroupnameConflict with default headers values
func NewFindNotesByGroupnameConflict() *FindNotesByGroupnameConflict {

	return &FindNotesByGroupnameConflict{}
}

// WithPayload adds the payload to the find notes by groupname conflict response
func (o *FindNotesByGroupnameConflict) WithPayload(payload *models.ErrResponse) *FindNotesByGroupnameConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find notes by groupname conflict response
func (o *FindNotesByGroupnameConflict) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindNotesByGroupnameConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// FindNotesByGroupnameInternalServerErrorCode is the HTTP code returned for type FindNotesByGroupnameInternalServerError
const FindNotesByGroupnameInternalServerErrorCode int = 500

/*FindNotesByGroupnameInternalServerError Internal Server Error

swagger:response findNotesByGroupnameInternalServerError
*/
type FindNotesByGroupnameInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewFindNotesByGroupnameInternalServerError creates FindNotesByGroupnameInternalServerError with default headers values
func NewFindNotesByGroupnameInternalServerError() *FindNotesByGroupnameInternalServerError {

	return &FindNotesByGroupnameInternalServerError{}
}

// WithPayload adds the payload to the find notes by groupname internal server error response
func (o *FindNotesByGroupnameInternalServerError) WithPayload(payload *models.ErrResponse) *FindNotesByGroupnameInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find notes by groupname internal server error response
func (o *FindNotesByGroupnameInternalServerError) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindNotesByGroupnameInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
