// Code generated by go-swagger; DO NOT EDIT.

package notes_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"2021-fall-cs160-team-Mochi/backend/source/generated/models"
)

// GetSingleNoteV1OKCode is the HTTP code returned for type GetSingleNoteV1OK
const GetSingleNoteV1OKCode int = 200

/*GetSingleNoteV1OK Success

swagger:response getSingleNoteV1OK
*/
type GetSingleNoteV1OK struct {

	/*
	  In: Body
	*/
	Payload *models.NoteObjectResponse `json:"body,omitempty"`
}

// NewGetSingleNoteV1OK creates GetSingleNoteV1OK with default headers values
func NewGetSingleNoteV1OK() *GetSingleNoteV1OK {

	return &GetSingleNoteV1OK{}
}

// WithPayload adds the payload to the get single note v1 o k response
func (o *GetSingleNoteV1OK) WithPayload(payload *models.NoteObjectResponse) *GetSingleNoteV1OK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get single note v1 o k response
func (o *GetSingleNoteV1OK) SetPayload(payload *models.NoteObjectResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSingleNoteV1OK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetSingleNoteV1BadRequestCode is the HTTP code returned for type GetSingleNoteV1BadRequest
const GetSingleNoteV1BadRequestCode int = 400

/*GetSingleNoteV1BadRequest Bad Request

swagger:response getSingleNoteV1BadRequest
*/
type GetSingleNoteV1BadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewGetSingleNoteV1BadRequest creates GetSingleNoteV1BadRequest with default headers values
func NewGetSingleNoteV1BadRequest() *GetSingleNoteV1BadRequest {

	return &GetSingleNoteV1BadRequest{}
}

// WithPayload adds the payload to the get single note v1 bad request response
func (o *GetSingleNoteV1BadRequest) WithPayload(payload *models.ErrResponse) *GetSingleNoteV1BadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get single note v1 bad request response
func (o *GetSingleNoteV1BadRequest) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSingleNoteV1BadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetSingleNoteV1UnauthorizedCode is the HTTP code returned for type GetSingleNoteV1Unauthorized
const GetSingleNoteV1UnauthorizedCode int = 401

/*GetSingleNoteV1Unauthorized Unauthorized

swagger:response getSingleNoteV1Unauthorized
*/
type GetSingleNoteV1Unauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewGetSingleNoteV1Unauthorized creates GetSingleNoteV1Unauthorized with default headers values
func NewGetSingleNoteV1Unauthorized() *GetSingleNoteV1Unauthorized {

	return &GetSingleNoteV1Unauthorized{}
}

// WithPayload adds the payload to the get single note v1 unauthorized response
func (o *GetSingleNoteV1Unauthorized) WithPayload(payload *models.ErrResponse) *GetSingleNoteV1Unauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get single note v1 unauthorized response
func (o *GetSingleNoteV1Unauthorized) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSingleNoteV1Unauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetSingleNoteV1ForbiddenCode is the HTTP code returned for type GetSingleNoteV1Forbidden
const GetSingleNoteV1ForbiddenCode int = 403

/*GetSingleNoteV1Forbidden Forbidden

swagger:response getSingleNoteV1Forbidden
*/
type GetSingleNoteV1Forbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewGetSingleNoteV1Forbidden creates GetSingleNoteV1Forbidden with default headers values
func NewGetSingleNoteV1Forbidden() *GetSingleNoteV1Forbidden {

	return &GetSingleNoteV1Forbidden{}
}

// WithPayload adds the payload to the get single note v1 forbidden response
func (o *GetSingleNoteV1Forbidden) WithPayload(payload *models.ErrResponse) *GetSingleNoteV1Forbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get single note v1 forbidden response
func (o *GetSingleNoteV1Forbidden) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSingleNoteV1Forbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetSingleNoteV1NotFoundCode is the HTTP code returned for type GetSingleNoteV1NotFound
const GetSingleNoteV1NotFoundCode int = 404

/*GetSingleNoteV1NotFound Not Found

swagger:response getSingleNoteV1NotFound
*/
type GetSingleNoteV1NotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewGetSingleNoteV1NotFound creates GetSingleNoteV1NotFound with default headers values
func NewGetSingleNoteV1NotFound() *GetSingleNoteV1NotFound {

	return &GetSingleNoteV1NotFound{}
}

// WithPayload adds the payload to the get single note v1 not found response
func (o *GetSingleNoteV1NotFound) WithPayload(payload *models.ErrResponse) *GetSingleNoteV1NotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get single note v1 not found response
func (o *GetSingleNoteV1NotFound) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSingleNoteV1NotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetSingleNoteV1ConflictCode is the HTTP code returned for type GetSingleNoteV1Conflict
const GetSingleNoteV1ConflictCode int = 409

/*GetSingleNoteV1Conflict Conflict

swagger:response getSingleNoteV1Conflict
*/
type GetSingleNoteV1Conflict struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewGetSingleNoteV1Conflict creates GetSingleNoteV1Conflict with default headers values
func NewGetSingleNoteV1Conflict() *GetSingleNoteV1Conflict {

	return &GetSingleNoteV1Conflict{}
}

// WithPayload adds the payload to the get single note v1 conflict response
func (o *GetSingleNoteV1Conflict) WithPayload(payload *models.ErrResponse) *GetSingleNoteV1Conflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get single note v1 conflict response
func (o *GetSingleNoteV1Conflict) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSingleNoteV1Conflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetSingleNoteV1InternalServerErrorCode is the HTTP code returned for type GetSingleNoteV1InternalServerError
const GetSingleNoteV1InternalServerErrorCode int = 500

/*GetSingleNoteV1InternalServerError Internal Server Error

swagger:response getSingleNoteV1InternalServerError
*/
type GetSingleNoteV1InternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewGetSingleNoteV1InternalServerError creates GetSingleNoteV1InternalServerError with default headers values
func NewGetSingleNoteV1InternalServerError() *GetSingleNoteV1InternalServerError {

	return &GetSingleNoteV1InternalServerError{}
}

// WithPayload adds the payload to the get single note v1 internal server error response
func (o *GetSingleNoteV1InternalServerError) WithPayload(payload *models.ErrResponse) *GetSingleNoteV1InternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get single note v1 internal server error response
func (o *GetSingleNoteV1InternalServerError) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSingleNoteV1InternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
