// Code generated by go-swagger; DO NOT EDIT.

package notes_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"2021-fall-cs160-team-Mochi/backend/source/generated/models"
)

// FindNotesByUsernameOKCode is the HTTP code returned for type FindNotesByUsernameOK
const FindNotesByUsernameOKCode int = 200

/*FindNotesByUsernameOK Success

swagger:response findNotesByUsernameOK
*/
type FindNotesByUsernameOK struct {

	/*
	  In: Body
	*/
	Payload *models.NotesGetResponse `json:"body,omitempty"`
}

// NewFindNotesByUsernameOK creates FindNotesByUsernameOK with default headers values
func NewFindNotesByUsernameOK() *FindNotesByUsernameOK {

	return &FindNotesByUsernameOK{}
}

// WithPayload adds the payload to the find notes by username o k response
func (o *FindNotesByUsernameOK) WithPayload(payload *models.NotesGetResponse) *FindNotesByUsernameOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find notes by username o k response
func (o *FindNotesByUsernameOK) SetPayload(payload *models.NotesGetResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindNotesByUsernameOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// FindNotesByUsernameBadRequestCode is the HTTP code returned for type FindNotesByUsernameBadRequest
const FindNotesByUsernameBadRequestCode int = 400

/*FindNotesByUsernameBadRequest Bad Request

swagger:response findNotesByUsernameBadRequest
*/
type FindNotesByUsernameBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewFindNotesByUsernameBadRequest creates FindNotesByUsernameBadRequest with default headers values
func NewFindNotesByUsernameBadRequest() *FindNotesByUsernameBadRequest {

	return &FindNotesByUsernameBadRequest{}
}

// WithPayload adds the payload to the find notes by username bad request response
func (o *FindNotesByUsernameBadRequest) WithPayload(payload *models.ErrResponse) *FindNotesByUsernameBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find notes by username bad request response
func (o *FindNotesByUsernameBadRequest) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindNotesByUsernameBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// FindNotesByUsernameUnauthorizedCode is the HTTP code returned for type FindNotesByUsernameUnauthorized
const FindNotesByUsernameUnauthorizedCode int = 401

/*FindNotesByUsernameUnauthorized Unauthorized

swagger:response findNotesByUsernameUnauthorized
*/
type FindNotesByUsernameUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewFindNotesByUsernameUnauthorized creates FindNotesByUsernameUnauthorized with default headers values
func NewFindNotesByUsernameUnauthorized() *FindNotesByUsernameUnauthorized {

	return &FindNotesByUsernameUnauthorized{}
}

// WithPayload adds the payload to the find notes by username unauthorized response
func (o *FindNotesByUsernameUnauthorized) WithPayload(payload *models.ErrResponse) *FindNotesByUsernameUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find notes by username unauthorized response
func (o *FindNotesByUsernameUnauthorized) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindNotesByUsernameUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// FindNotesByUsernameForbiddenCode is the HTTP code returned for type FindNotesByUsernameForbidden
const FindNotesByUsernameForbiddenCode int = 403

/*FindNotesByUsernameForbidden Forbidden

swagger:response findNotesByUsernameForbidden
*/
type FindNotesByUsernameForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewFindNotesByUsernameForbidden creates FindNotesByUsernameForbidden with default headers values
func NewFindNotesByUsernameForbidden() *FindNotesByUsernameForbidden {

	return &FindNotesByUsernameForbidden{}
}

// WithPayload adds the payload to the find notes by username forbidden response
func (o *FindNotesByUsernameForbidden) WithPayload(payload *models.ErrResponse) *FindNotesByUsernameForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find notes by username forbidden response
func (o *FindNotesByUsernameForbidden) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindNotesByUsernameForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// FindNotesByUsernameNotFoundCode is the HTTP code returned for type FindNotesByUsernameNotFound
const FindNotesByUsernameNotFoundCode int = 404

/*FindNotesByUsernameNotFound Not Found

swagger:response findNotesByUsernameNotFound
*/
type FindNotesByUsernameNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewFindNotesByUsernameNotFound creates FindNotesByUsernameNotFound with default headers values
func NewFindNotesByUsernameNotFound() *FindNotesByUsernameNotFound {

	return &FindNotesByUsernameNotFound{}
}

// WithPayload adds the payload to the find notes by username not found response
func (o *FindNotesByUsernameNotFound) WithPayload(payload *models.ErrResponse) *FindNotesByUsernameNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find notes by username not found response
func (o *FindNotesByUsernameNotFound) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindNotesByUsernameNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// FindNotesByUsernameConflictCode is the HTTP code returned for type FindNotesByUsernameConflict
const FindNotesByUsernameConflictCode int = 409

/*FindNotesByUsernameConflict Conflict

swagger:response findNotesByUsernameConflict
*/
type FindNotesByUsernameConflict struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewFindNotesByUsernameConflict creates FindNotesByUsernameConflict with default headers values
func NewFindNotesByUsernameConflict() *FindNotesByUsernameConflict {

	return &FindNotesByUsernameConflict{}
}

// WithPayload adds the payload to the find notes by username conflict response
func (o *FindNotesByUsernameConflict) WithPayload(payload *models.ErrResponse) *FindNotesByUsernameConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find notes by username conflict response
func (o *FindNotesByUsernameConflict) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindNotesByUsernameConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// FindNotesByUsernameInternalServerErrorCode is the HTTP code returned for type FindNotesByUsernameInternalServerError
const FindNotesByUsernameInternalServerErrorCode int = 500

/*FindNotesByUsernameInternalServerError Internal Server Error

swagger:response findNotesByUsernameInternalServerError
*/
type FindNotesByUsernameInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewFindNotesByUsernameInternalServerError creates FindNotesByUsernameInternalServerError with default headers values
func NewFindNotesByUsernameInternalServerError() *FindNotesByUsernameInternalServerError {

	return &FindNotesByUsernameInternalServerError{}
}

// WithPayload adds the payload to the find notes by username internal server error response
func (o *FindNotesByUsernameInternalServerError) WithPayload(payload *models.ErrResponse) *FindNotesByUsernameInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find notes by username internal server error response
func (o *FindNotesByUsernameInternalServerError) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindNotesByUsernameInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
