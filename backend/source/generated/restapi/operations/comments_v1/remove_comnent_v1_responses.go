// Code generated by go-swagger; DO NOT EDIT.

package comments_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"2021-fall-cs160-team-Mochi/backend/source/generated/models"
)

// RemoveComnentV1OKCode is the HTTP code returned for type RemoveComnentV1OK
const RemoveComnentV1OKCode int = 200

/*RemoveComnentV1OK Success

swagger:response removeComnentV1OK
*/
type RemoveComnentV1OK struct {

	/*
	  In: Body
	*/
	Payload *models.CommentResponse `json:"body,omitempty"`
}

// NewRemoveComnentV1OK creates RemoveComnentV1OK with default headers values
func NewRemoveComnentV1OK() *RemoveComnentV1OK {

	return &RemoveComnentV1OK{}
}

// WithPayload adds the payload to the remove comnent v1 o k response
func (o *RemoveComnentV1OK) WithPayload(payload *models.CommentResponse) *RemoveComnentV1OK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the remove comnent v1 o k response
func (o *RemoveComnentV1OK) SetPayload(payload *models.CommentResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RemoveComnentV1OK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RemoveComnentV1BadRequestCode is the HTTP code returned for type RemoveComnentV1BadRequest
const RemoveComnentV1BadRequestCode int = 400

/*RemoveComnentV1BadRequest Bad Request

swagger:response removeComnentV1BadRequest
*/
type RemoveComnentV1BadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewRemoveComnentV1BadRequest creates RemoveComnentV1BadRequest with default headers values
func NewRemoveComnentV1BadRequest() *RemoveComnentV1BadRequest {

	return &RemoveComnentV1BadRequest{}
}

// WithPayload adds the payload to the remove comnent v1 bad request response
func (o *RemoveComnentV1BadRequest) WithPayload(payload *models.ErrResponse) *RemoveComnentV1BadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the remove comnent v1 bad request response
func (o *RemoveComnentV1BadRequest) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RemoveComnentV1BadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RemoveComnentV1UnauthorizedCode is the HTTP code returned for type RemoveComnentV1Unauthorized
const RemoveComnentV1UnauthorizedCode int = 401

/*RemoveComnentV1Unauthorized Unauthorized

swagger:response removeComnentV1Unauthorized
*/
type RemoveComnentV1Unauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewRemoveComnentV1Unauthorized creates RemoveComnentV1Unauthorized with default headers values
func NewRemoveComnentV1Unauthorized() *RemoveComnentV1Unauthorized {

	return &RemoveComnentV1Unauthorized{}
}

// WithPayload adds the payload to the remove comnent v1 unauthorized response
func (o *RemoveComnentV1Unauthorized) WithPayload(payload *models.ErrResponse) *RemoveComnentV1Unauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the remove comnent v1 unauthorized response
func (o *RemoveComnentV1Unauthorized) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RemoveComnentV1Unauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RemoveComnentV1ForbiddenCode is the HTTP code returned for type RemoveComnentV1Forbidden
const RemoveComnentV1ForbiddenCode int = 403

/*RemoveComnentV1Forbidden Forbidden

swagger:response removeComnentV1Forbidden
*/
type RemoveComnentV1Forbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewRemoveComnentV1Forbidden creates RemoveComnentV1Forbidden with default headers values
func NewRemoveComnentV1Forbidden() *RemoveComnentV1Forbidden {

	return &RemoveComnentV1Forbidden{}
}

// WithPayload adds the payload to the remove comnent v1 forbidden response
func (o *RemoveComnentV1Forbidden) WithPayload(payload *models.ErrResponse) *RemoveComnentV1Forbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the remove comnent v1 forbidden response
func (o *RemoveComnentV1Forbidden) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RemoveComnentV1Forbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RemoveComnentV1NotFoundCode is the HTTP code returned for type RemoveComnentV1NotFound
const RemoveComnentV1NotFoundCode int = 404

/*RemoveComnentV1NotFound Not Found

swagger:response removeComnentV1NotFound
*/
type RemoveComnentV1NotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewRemoveComnentV1NotFound creates RemoveComnentV1NotFound with default headers values
func NewRemoveComnentV1NotFound() *RemoveComnentV1NotFound {

	return &RemoveComnentV1NotFound{}
}

// WithPayload adds the payload to the remove comnent v1 not found response
func (o *RemoveComnentV1NotFound) WithPayload(payload *models.ErrResponse) *RemoveComnentV1NotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the remove comnent v1 not found response
func (o *RemoveComnentV1NotFound) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RemoveComnentV1NotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RemoveComnentV1ConflictCode is the HTTP code returned for type RemoveComnentV1Conflict
const RemoveComnentV1ConflictCode int = 409

/*RemoveComnentV1Conflict Conflict

swagger:response removeComnentV1Conflict
*/
type RemoveComnentV1Conflict struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewRemoveComnentV1Conflict creates RemoveComnentV1Conflict with default headers values
func NewRemoveComnentV1Conflict() *RemoveComnentV1Conflict {

	return &RemoveComnentV1Conflict{}
}

// WithPayload adds the payload to the remove comnent v1 conflict response
func (o *RemoveComnentV1Conflict) WithPayload(payload *models.ErrResponse) *RemoveComnentV1Conflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the remove comnent v1 conflict response
func (o *RemoveComnentV1Conflict) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RemoveComnentV1Conflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RemoveComnentV1InternalServerErrorCode is the HTTP code returned for type RemoveComnentV1InternalServerError
const RemoveComnentV1InternalServerErrorCode int = 500

/*RemoveComnentV1InternalServerError Internal Server Error

swagger:response removeComnentV1InternalServerError
*/
type RemoveComnentV1InternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewRemoveComnentV1InternalServerError creates RemoveComnentV1InternalServerError with default headers values
func NewRemoveComnentV1InternalServerError() *RemoveComnentV1InternalServerError {

	return &RemoveComnentV1InternalServerError{}
}

// WithPayload adds the payload to the remove comnent v1 internal server error response
func (o *RemoveComnentV1InternalServerError) WithPayload(payload *models.ErrResponse) *RemoveComnentV1InternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the remove comnent v1 internal server error response
func (o *RemoveComnentV1InternalServerError) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RemoveComnentV1InternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
