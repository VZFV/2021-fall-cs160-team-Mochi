// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CommentObject comment object
//
// swagger:model commentObject
type CommentObject struct {

	// content of the comment
	// Required: true
	Content *string `json:"content"`

	// the note corresponding to comment_id
	// Required: true
	NoteID *string `json:"note_id"`

	// user who submit the comment
	// Required: true
	Username *string `json:"username"`
}

// Validate validates this comment object
func (m *CommentObject) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateContent(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNoteID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUsername(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CommentObject) validateContent(formats strfmt.Registry) error {

	if err := validate.Required("content", "body", m.Content); err != nil {
		return err
	}

	return nil
}

func (m *CommentObject) validateNoteID(formats strfmt.Registry) error {

	if err := validate.Required("note_id", "body", m.NoteID); err != nil {
		return err
	}

	return nil
}

func (m *CommentObject) validateUsername(formats strfmt.Registry) error {

	if err := validate.Required("username", "body", m.Username); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this comment object based on context it is used
func (m *CommentObject) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CommentObject) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CommentObject) UnmarshalBinary(b []byte) error {
	var res CommentObject
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
